

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri May 13 22:24:43 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F24K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           	psect	idataCOMRAM
    35  0003DC                     __pidataCOMRAM:
    36                           	opt stack 0
    37                           
    38                           ;initializer for _mode
    39  0003DC  01                 	db	1
    40                           
    41                           ;initializer for _notSentToUART
    42  0003DD  01                 	db	1
    43                           
    44                           ;initializer for _send_ping
    45  0003DE  01                 	db	1
    46                           
    47                           ;initializer for _sensor1_RTT
    48  0003DF  FF                 	db	255
    49  0000                     _ANSELBbits	set	3932
    50  0000                     _ADCON0bits	set	4034
    51  0000                     _ADCON1bits	set	4033
    52  0000                     _ADCON2bits	set	4032
    53  0000                     _ADRESH	set	4036
    54  0000                     _ADRESL	set	4035
    55  0000                     _CCP2CON	set	3991
    56  0000                     _CCPR2L	set	3984
    57  0000                     _INTCONbits	set	4082
    58  0000                     _LATAbits	set	3977
    59  0000                     _OSCCONbits	set	4051
    60  0000                     _PIE1bits	set	3997
    61  0000                     _PIE3bits	set	4003
    62  0000                     _PIR1bits	set	3998
    63  0000                     _PIR3bits	set	4004
    64  0000                     _PORTC	set	3970
    65  0000                     _PR2	set	4027
    66  0000                     _SPBRG	set	4015
    67  0000                     _T1CON	set	4045
    68  0000                     _T1CONbits	set	4045
    69  0000                     _T1GCON	set	4044
    70  0000                     _T1GCONbits	set	4044
    71  0000                     _TMR0H	set	4055
    72  0000                     _TMR0L	set	4054
    73  0000                     _TMR1H	set	4047
    74  0000                     _TMR1L	set	4046
    75  0000                     _TRISAbits	set	3986
    76  0000                     _TRISBbits	set	3987
    77  0000                     _TXREG1	set	4013
    78  0000                     _TXSTA1bits	set	4012
    79  0000                     _ADIE	set	31982
    80  0000                     _ADIF	set	31990
    81  0000                     _BRGH	set	32098
    82  0000                     _CREN	set	32092
    83  0000                     _GIEH	set	32663
    84  0000                     _LATC6	set	31838
    85  0000                     _LATC7	set	31839
    86  0000                     _PEIE	set	32662
    87  0000                     _PSA	set	32427
    88  0000                     _SPEN	set	32095
    89  0000                     _SYNC	set	32100
    90  0000                     _T08BIT	set	32430
    91  0000                     _T0CS	set	32429
    92  0000                     _T0SE	set	32428
    93  0000                     _T2CKPS0	set	32208
    94  0000                     _T2CKPS1	set	32209
    95  0000                     _TMR0ON	set	32431
    96  0000                     _TMR1IE	set	31976
    97  0000                     _TMR1IF	set	31984
    98  0000                     _TMR1ON	set	32360
    99  0000                     _TMR2ON	set	32210
   100  0000                     _TRISC1	set	31905
   101  0000                     _TRISC6	set	31910
   102  0000                     _TRISC7	set	31911
   103  0000                     _TXEN	set	32101
   104                           
   105                           ; #config settings
   106  0000                     
   107                           	psect	cinit
   108  000286                     __pcinit:
   109                           	opt stack 0
   110  000286                     start_initialization:
   111                           	opt stack 0
   112  000286                     __initialization:
   113                           	opt stack 0
   114                           
   115                           ; Clear objects allocated to COMRAM (14 bytes)
   116  000286  EE00  F01E         	lfsr	0,__pbssCOMRAM
   117  00028A  0E0E               	movlw	14
   118  00028C                     clear_0:
   119  00028C  6AEE               	clrf	postinc0,c
   120  00028E  06E8               	decf	wreg,f,c
   121  000290  E1FD               	bnz	clear_0
   122                           
   123                           ; Initialize objects allocated to COMRAM (4 bytes)
   124                           ; load TBLPTR registers with __pidataCOMRAM
   125  000292  0EDC               	movlw	low __pidataCOMRAM
   126  000294  6EF6               	movwf	tblptrl,c
   127  000296  0E03               	movlw	high __pidataCOMRAM
   128  000298  6EF7               	movwf	tblptrh,c
   129  00029A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   130  00029C  6EF8               	movwf	tblptru,c
   131  00029E  EE00  F02C         	lfsr	0,__pdataCOMRAM
   132  0002A2  EE10 F004          	lfsr	1,4
   133  0002A6                     copy_data0:
   134  0002A6  0009               	tblrd		*+
   135  0002A8  CFF5 FFEE          	movff	tablat,postinc0
   136  0002AC  50E5               	movf	postdec1,w,c
   137  0002AE  50E1               	movf	fsr1l,w,c
   138  0002B0  E1FA               	bnz	copy_data0
   139  0002B2                     end_of_initialization:
   140                           	opt stack 0
   141  0002B2                     __end_of__initialization:
   142                           	opt stack 0
   143  0002B2  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   144  0002B4  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   145  0002B6  0100               	movlb	0
   146  0002B8  EFE4  F000         	goto	_main	;jump to C main() function
   147                           tblptru	equ	0xFF8
   148                           tblptrh	equ	0xFF7
   149                           tblptrl	equ	0xFF6
   150                           tablat	equ	0xFF5
   151                           postinc0	equ	0xFEE
   152                           wreg	equ	0xFE8
   153                           postdec1	equ	0xFE5
   154                           fsr1l	equ	0xFE1
   155                           
   156                           	psect	bssCOMRAM
   157  00001E                     __pbssCOMRAM:
   158                           	opt stack 0
   159  00001E                     _counter:
   160                           	opt stack 0
   161  00001E                     	ds	2
   162  000020                     _tmr0_overflow_counter:
   163                           	opt stack 0
   164  000020                     	ds	2
   165  000022                     _tmr1_counter_high:
   166                           	opt stack 0
   167  000022                     	ds	2
   168  000024                     _tmr1_counter_low:
   169                           	opt stack 0
   170  000024                     	ds	2
   171  000026                     _RTT_received:
   172                           	opt stack 0
   173  000026                     	ds	1
   174  000027                     _USART1_Status:
   175                           	opt stack 0
   176  000027                     	ds	1
   177  000028                     _blocking_sensors:
   178                           	opt stack 0
   179  000028                     	ds	1
   180  000029                     _listening:
   181                           	opt stack 0
   182  000029                     	ds	1
   183  00002A                     _no_RTT_counter:
   184                           	opt stack 0
   185  00002A                     	ds	1
   186  00002B                     _ping_send:
   187                           	opt stack 0
   188  00002B                     	ds	1
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           postdec1	equ	0xFE5
   196                           fsr1l	equ	0xFE1
   197                           
   198                           	psect	dataCOMRAM
   199  00002C                     __pdataCOMRAM:
   200                           	opt stack 0
   201  00002C                     _mode:
   202                           	opt stack 0
   203  00002C                     	ds	1
   204  00002D                     _notSentToUART:
   205                           	opt stack 0
   206  00002D                     	ds	1
   207  00002E                     _send_ping:
   208                           	opt stack 0
   209  00002E                     	ds	1
   210  00002F                     _sensor1_RTT:
   211                           	opt stack 0
   212  00002F                     	ds	1
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           postdec1	equ	0xFE5
   220                           fsr1l	equ	0xFE1
   221                           
   222                           	psect	cstackCOMRAM
   223  000001                     __pcstackCOMRAM:
   224                           	opt stack 0
   225  000001                     ??_interrupt_service_routine:
   226  000001                     
   227                           ; 1 bytes @ 0x0
   228  000001                     	ds	18
   229  000013                     interrupt_service_routine@sensor1_val:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x12
   233  000013                     	ds	2
   234  000015                     OpenTimer1@config1:
   235                           	opt stack 0
   236  000015                     Write1USART@data:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x14
   240  000015                     	ds	1
   241  000016                     ??_OpenTimer1:
   242  000016                     putc_when_ready@c:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x15
   246  000016                     	ds	1
   247  000017                     OpenTimer1@config:
   248                           	opt stack 0
   249  000017                     send_coord@x_cm:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x16
   253  000017                     	ds	1
   254  000018                     
   255                           ; 1 bytes @ 0x17
   256  000018                     	ds	1
   257  000019                     send_coord@y_cm:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x18
   261  000019                     	ds	2
   262  00001B                     main@f_tmr1_counter_high:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x1A
   266  00001B                     	ds	2
   267  00001D                     main@readyForUART:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x1C
   271  00001D                     	ds	1
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           postdec1	equ	0xFE5
   279                           fsr1l	equ	0xFE1
   280                           
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 250 in file "main.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;  f_tmr1_count    2   26[COMRAM] int 
   291 ;;  readyForUART    1   28[COMRAM] unsigned char 
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   301 ;;      Params:         0       0       0       0       0       0       0       0       0
   302 ;;      Locals:         3       0       0       0       0       0       0       0       0
   303 ;;      Temps:          0       0       0       0       0       0       0       0       0
   304 ;;      Totals:         3       0       0       0       0       0       0       0       0
   305 ;;Total ram usage:        3 bytes
   306 ;; Hardware stack levels required when called:    5
   307 ;; This function calls:
   308 ;;		_initADCON
   309 ;;		_initLedPorts
   310 ;;		_initOscillator
   311 ;;		_initPWM
   312 ;;		_initTMR0
   313 ;;		_initTMR1
   314 ;;		_initUART
   315 ;;		_send_coord
   316 ;;		_startTMR0For1kHz
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text0
   323  0001C8                     __ptext0:
   324                           	opt stack 0
   325  0001C8                     _main:
   326                           	opt stack 26
   327                           
   328                           ;main.c: 251: initOscillator();
   329                           
   330                           ;incstack = 0
   331  0001C8  ECB5  F001         	call	_initOscillator	;wreg free
   332                           
   333                           ;main.c: 252: initTMR0();
   334  0001CC  ECDB  F001         	call	_initTMR0	;wreg free
   335                           
   336                           ;main.c: 253: initTMR1();
   337  0001D0  ECD5  F001         	call	_initTMR1	;wreg free
   338                           
   339                           ;main.c: 254: initLedPorts();
   340  0001D4  ECE0  F001         	call	_initLedPorts	;wreg free
   341                           
   342                           ;main.c: 255: initADCON();
   343  0001D8  EC5E  F001         	call	_initADCON	;wreg free
   344                           
   345                           ;main.c: 256: initUART();
   346  0001DC  EC89  F001         	call	_initUART	;wreg free
   347                           
   348                           ;main.c: 257: initPWM();
   349  0001E0  EC95  F001         	call	_initPWM	;wreg free
   350                           
   351                           ;main.c: 262: int f_tmr1_counter_high = 0;
   352  0001E4  0E00               	movlw	0
   353  0001E6  6E1C               	movwf	main@f_tmr1_counter_high+1,c
   354  0001E8  0E00               	movlw	0
   355  0001EA  6E1B               	movwf	main@f_tmr1_counter_high,c
   356                           
   357                           ;main.c: 268: GIEH = 1;
   358  0001EC  8EF2               	bsf	intcon,7,c	;volatile
   359                           
   360                           ;main.c: 269: PEIE = 1;
   361  0001EE  8CF2               	bsf	intcon,6,c	;volatile
   362                           
   363                           ;main.c: 271: bool readyForUART = 0;
   364  0001F0  0E00               	movlw	0
   365  0001F2  6E1D               	movwf	main@readyForUART,c
   366                           
   367                           ;main.c: 274: startTMR0For1kHz();
   368  0001F4  ECBE  F001         	call	_startTMR0For1kHz	;wreg free
   369  0001F8                     l1226:
   370                           
   371                           ;main.c: 277: if (no_RTT_counter > 3 || no_RTT_counter > 3) {
   372  0001F8  0E04               	movlw	4
   373  0001FA  602A               	cpfslt	_no_RTT_counter,c	;volatile
   374  0001FC  D7FD               	goto	l1226
   375  0001FE  0E03               	movlw	3
   376  000200  642A               	cpfsgt	_no_RTT_counter,c	;volatile
   377  000202  D001               	goto	l1230
   378  000204  D7F9               	goto	l1226
   379  000206                     l1230:
   380                           
   381                           ;main.c: 281: if (RTT_received && notSentToUART) {
   382  000206  5026               	movf	_RTT_received,w,c	;volatile
   383  000208  B4D8               	btfsc	status,2,c
   384  00020A  D009               	goto	l180
   385  00020C  502D               	movf	_notSentToUART,w,c	;volatile
   386  00020E  B4D8               	btfsc	status,2,c
   387  000210  D006               	goto	l180
   388                           
   389                           ;main.c: 286: f_tmr1_counter_high = tmr1_counter_high;
   390  000212  C022  F01B         	movff	_tmr1_counter_high,main@f_tmr1_counter_high	;volatile
   391  000216  C023  F01C         	movff	_tmr1_counter_high+1,main@f_tmr1_counter_high+1	;volatile
   392                           
   393                           ;main.c: 295: readyForUART = 1;
   394  00021A  0E01               	movlw	1
   395  00021C  6E1D               	movwf	main@readyForUART,c
   396  00021E                     l180:
   397                           
   398                           ;main.c: 296: }
   399                           ;main.c: 298: if (readyForUART && notSentToUART) {
   400  00021E  501D               	movf	main@readyForUART,w,c
   401  000220  B4D8               	btfsc	status,2,c
   402  000222  D7EA               	goto	l1226
   403  000224  502D               	movf	_notSentToUART,w,c	;volatile
   404  000226  B4D8               	btfsc	status,2,c
   405  000228  D7E7               	goto	l1226
   406                           
   407                           ;main.c: 302: send_coord(f_tmr1_counter_high, 0);
   408  00022A  C01B  F017         	movff	main@f_tmr1_counter_high,send_coord@x_cm
   409  00022E  C01C  F018         	movff	main@f_tmr1_counter_high+1,send_coord@x_cm+1
   410  000232  0E00               	movlw	0
   411  000234  6E1A               	movwf	send_coord@y_cm+1,c
   412  000236  0E00               	movlw	0
   413  000238  6E19               	movwf	send_coord@y_cm,c
   414  00023A  EC79  F001         	call	_send_coord	;wreg free
   415                           
   416                           ;main.c: 304: readyForUART = 0;
   417  00023E  0E00               	movlw	0
   418  000240  6E1D               	movwf	main@readyForUART,c
   419                           
   420                           ;main.c: 305: notSentToUART = 0;
   421  000242  0E00               	movlw	0
   422  000244  6E2D               	movwf	_notSentToUART,c	;volatile
   423  000246  D7D8               	goto	l1226
   424  000248                     __end_of_main:
   425                           	opt stack 0
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           intcon	equ	0xFF2
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           postdec1	equ	0xFE5
   434                           fsr1l	equ	0xFE1
   435                           status	equ	0xFD8
   436                           
   437 ;; *************** function _startTMR0For1kHz *****************
   438 ;; Defined at:
   439 ;;		line 12 in file "custom_timer.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   453 ;;      Params:         0       0       0       0       0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0       0       0       0       0
   456 ;;      Totals:         0       0       0       0       0       0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; Hardware stack levels required when called:    2
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text1
   468  00037C                     __ptext1:
   469                           	opt stack 0
   470  00037C                     _startTMR0For1kHz:
   471                           	opt stack 28
   472                           
   473                           ;custom_timer.c: 13: TMR0H = 0xF0;
   474                           
   475                           ;incstack = 0
   476  00037C  0EF0               	movlw	240
   477  00037E  6ED7               	movwf	4055,c	;volatile
   478                           
   479                           ;custom_timer.c: 14: TMR0L = 0x60;
   480  000380  0E60               	movlw	96
   481  000382  6ED6               	movwf	4054,c	;volatile
   482                           
   483                           ;custom_timer.c: 15: INTCONbits.TMR0IF = 0;
   484  000384  94F2               	bcf	intcon,2,c	;volatile
   485                           
   486                           ;custom_timer.c: 16: INTCONbits.TMR0IE = 1;
   487  000386  8AF2               	bsf	intcon,5,c	;volatile
   488                           
   489                           ;custom_timer.c: 17: TMR0ON = 1;
   490  000388  8ED5               	bsf	4053,7,c	;volatile
   491  00038A  0012               	return		;funcret
   492  00038C                     __end_of_startTMR0For1kHz:
   493                           	opt stack 0
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           intcon	equ	0xFF2
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           postdec1	equ	0xFE5
   502                           fsr1l	equ	0xFE1
   503                           status	equ	0xFD8
   504                           
   505 ;; *************** function _send_coord *****************
   506 ;; Defined at:
   507 ;;		line 25 in file "protocol.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;  x_cm            2   22[COMRAM] unsigned int 
   510 ;;  y_cm            2   24[COMRAM] unsigned int 
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   522 ;;      Params:         4       0       0       0       0       0       0       0       0
   523 ;;      Locals:         0       0       0       0       0       0       0       0       0
   524 ;;      Temps:          0       0       0       0       0       0       0       0       0
   525 ;;      Totals:         4       0       0       0       0       0       0       0       0
   526 ;;Total ram usage:        4 bytes
   527 ;; Hardware stack levels used:    1
   528 ;; Hardware stack levels required when called:    4
   529 ;; This function calls:
   530 ;;		_putc_when_ready
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text2
   537  0002F2                     __ptext2:
   538                           	opt stack 0
   539  0002F2                     _send_coord:
   540                           	opt stack 26
   541                           
   542                           ;protocol.c: 26: putc_when_ready(0x16);
   543                           
   544                           ;incstack = 0
   545  0002F2  0E16               	movlw	22
   546  0002F4  ECCE  F001         	call	_putc_when_ready
   547                           
   548                           ;protocol.c: 27: putc_when_ready((x_cm >> 8) & 0xFF);
   549  0002F8  5018               	movf	send_coord@x_cm+1,w,c
   550  0002FA  ECCE  F001         	call	_putc_when_ready
   551                           
   552                           ;protocol.c: 28: putc_when_ready((x_cm) & 0xFF);
   553  0002FE  5017               	movf	send_coord@x_cm,w,c
   554  000300  ECCE  F001         	call	_putc_when_ready
   555                           
   556                           ;protocol.c: 29: putc_when_ready((y_cm >> 8) & 0xFF);
   557  000304  501A               	movf	send_coord@y_cm+1,w,c
   558  000306  ECCE  F001         	call	_putc_when_ready
   559                           
   560                           ;protocol.c: 30: putc_when_ready((y_cm) & 0XFF);
   561  00030A  5019               	movf	send_coord@y_cm,w,c
   562  00030C  ECCE  F001         	call	_putc_when_ready
   563  000310  0012               	return		;funcret
   564  000312                     __end_of_send_coord:
   565                           	opt stack 0
   566                           tblptru	equ	0xFF8
   567                           tblptrh	equ	0xFF7
   568                           tblptrl	equ	0xFF6
   569                           tablat	equ	0xFF5
   570                           intcon	equ	0xFF2
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           postdec1	equ	0xFE5
   574                           fsr1l	equ	0xFE1
   575                           status	equ	0xFD8
   576                           
   577 ;; *************** function _putc_when_ready *****************
   578 ;; Defined at:
   579 ;;		line 20 in file "protocol.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;  c               1    wreg     unsigned char 
   582 ;; Auto vars:     Size  Location     Type
   583 ;;  c               1   21[COMRAM] unsigned char 
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, status,2, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   593 ;;      Params:         0       0       0       0       0       0       0       0       0
   594 ;;      Locals:         1       0       0       0       0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0       0       0       0       0
   596 ;;      Totals:         1       0       0       0       0       0       0       0       0
   597 ;;Total ram usage:        1 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    3
   600 ;; This function calls:
   601 ;;		_Write1USART
   602 ;; This function is called by:
   603 ;;		_send_coord
   604 ;;		_send_debug_nchar
   605 ;;		_send_debug
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text3
   610  00039C                     __ptext3:
   611                           	opt stack 0
   612  00039C                     _putc_when_ready:
   613                           	opt stack 26
   614                           
   615                           ;incstack = 0
   616                           ;putc_when_ready@c stored from wreg
   617  00039C  6E16               	movwf	putc_when_ready@c,c
   618  00039E                     l218:
   619  00039E  A2AC               	btfss	4012,1,c	;volatile
   620  0003A0  D7FE               	goto	l218
   621                           
   622                           ;protocol.c: 22: Write1USART(c);
   623  0003A2  5016               	movf	putc_when_ready@c,w,c
   624  0003A4  ECAC  F001         	call	_Write1USART
   625  0003A8  0012               	return		;funcret
   626  0003AA                     __end_of_putc_when_ready:
   627                           	opt stack 0
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           intcon	equ	0xFF2
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           postdec1	equ	0xFE5
   636                           fsr1l	equ	0xFE1
   637                           status	equ	0xFD8
   638                           
   639 ;; *************** function _Write1USART *****************
   640 ;; Defined at:
   641 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\plib\USART\u1write.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  data            1    wreg     unsigned char 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  data            1   20[COMRAM] unsigned char 
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   655 ;;      Params:         0       0       0       0       0       0       0       0       0
   656 ;;      Locals:         1       0       0       0       0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0       0       0
   658 ;;      Totals:         1       0       0       0       0       0       0       0       0
   659 ;;Total ram usage:        1 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    2
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_putc_when_ready
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text4
   670  000358                     __ptext4:
   671                           	opt stack 0
   672  000358                     _Write1USART:
   673                           	opt stack 26
   674                           
   675                           ;incstack = 0
   676                           ;Write1USART@data stored from wreg
   677  000358  6E15               	movwf	Write1USART@data,c
   678  00035A  ACAC               	btfss	4012,6,c	;volatile
   679  00035C  D003               	goto	l910
   680  00035E  90AC               	bcf	4012,0,c	;volatile
   681  000360  B227               	btfsc	_USART1_Status,1,c
   682  000362  80AC               	bsf	4012,0,c	;volatile
   683  000364                     l910:
   684  000364  C015  FFAD         	movff	Write1USART@data,4013	;volatile
   685  000368  0012               	return		;funcret
   686  00036A                     __end_of_Write1USART:
   687                           	opt stack 0
   688                           tblptru	equ	0xFF8
   689                           tblptrh	equ	0xFF7
   690                           tblptrl	equ	0xFF6
   691                           tablat	equ	0xFF5
   692                           intcon	equ	0xFF2
   693                           postinc0	equ	0xFEE
   694                           wreg	equ	0xFE8
   695                           postdec1	equ	0xFE5
   696                           fsr1l	equ	0xFE1
   697                           status	equ	0xFD8
   698                           
   699 ;; *************** function _initUART *****************
   700 ;; Defined at:
   701 ;;		line 50 in file "protocol.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   715 ;;      Params:         0       0       0       0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0
   718 ;;      Totals:         0       0       0       0       0       0       0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    2
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text5
   730  000312                     __ptext5:
   731                           	opt stack 0
   732  000312                     _initUART:
   733                           	opt stack 28
   734                           
   735                           ;protocol.c: 51: BRGH = 0;
   736                           
   737                           ;incstack = 0
   738  000312  94AC               	bcf	4012,2,c	;volatile
   739                           
   740                           ;protocol.c: 52: SPBRG = 25;
   741  000314  0E19               	movlw	25
   742  000316  6EAF               	movwf	4015,c	;volatile
   743                           
   744                           ;protocol.c: 53: SYNC = 0;
   745  000318  98AC               	bcf	4012,4,c	;volatile
   746                           
   747                           ;protocol.c: 54: SPEN = 1;
   748  00031A  8EAB               	bsf	4011,7,c	;volatile
   749                           
   750                           ;protocol.c: 55: TRISC7 = 1;
   751  00031C  8E94               	bsf	3988,7,c	;volatile
   752                           
   753                           ;protocol.c: 56: TRISC6 = 1;
   754  00031E  8C94               	bsf	3988,6,c	;volatile
   755                           
   756                           ;protocol.c: 57: LATC6 = 0;
   757  000320  9C8B               	bcf	3979,6,c	;volatile
   758                           
   759                           ;protocol.c: 58: LATC7 = 0;
   760  000322  9E8B               	bcf	3979,7,c	;volatile
   761                           
   762                           ;protocol.c: 59: CREN = 1;
   763  000324  88AB               	bsf	4011,4,c	;volatile
   764                           
   765                           ;protocol.c: 60: TXEN = 1;
   766  000326  8AAC               	bsf	4012,5,c	;volatile
   767  000328  0012               	return		;funcret
   768  00032A                     __end_of_initUART:
   769                           	opt stack 0
   770                           tblptru	equ	0xFF8
   771                           tblptrh	equ	0xFF7
   772                           tblptrl	equ	0xFF6
   773                           tablat	equ	0xFF5
   774                           intcon	equ	0xFF2
   775                           postinc0	equ	0xFEE
   776                           wreg	equ	0xFE8
   777                           postdec1	equ	0xFE5
   778                           fsr1l	equ	0xFE1
   779                           status	equ	0xFD8
   780                           
   781 ;; *************** function _initTMR1 *****************
   782 ;; Defined at:
   783 ;;		line 141 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   797 ;;      Params:         0       0       0       0       0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0
   800 ;;      Totals:         0       0       0       0       0       0       0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    3
   804 ;; This function calls:
   805 ;;		_OpenTimer1
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text6
   812  0003AA                     __ptext6:
   813                           	opt stack 0
   814  0003AA                     _initTMR1:
   815                           	opt stack 27
   816                           
   817                           ;main.c: 142: OpenTimer1(0b11111111
   818                           ;main.c: 143: & 0b11111111
   819                           ;main.c: 144: & 0b10011111
   820                           ;main.c: 145: & 0b11100111
   821                           ;main.c: 146: & 0b11111011
   822                           ;main.c: 147: & 0b11111111,
   823                           ;main.c: 149: 0b01111111
   824                           ;main.c: 150: & 0b11111111
   825                           ;main.c: 151: & 0b11011111
   826                           ;main.c: 152: & 0b11111100
   827                           ;main.c: 153: & 0b11111011);
   828                           
   829                           ;incstack = 0
   830  0003AA  0E58               	movlw	88
   831  0003AC  6E15               	movwf	OpenTimer1@config1,c
   832  0003AE  0E83               	movlw	131
   833  0003B0  EC24  F001         	call	_OpenTimer1
   834  0003B4  0012               	return		;funcret
   835  0003B6                     __end_of_initTMR1:
   836                           	opt stack 0
   837                           tblptru	equ	0xFF8
   838                           tblptrh	equ	0xFF7
   839                           tblptrl	equ	0xFF6
   840                           tablat	equ	0xFF5
   841                           intcon	equ	0xFF2
   842                           postinc0	equ	0xFEE
   843                           wreg	equ	0xFE8
   844                           postdec1	equ	0xFE5
   845                           fsr1l	equ	0xFE1
   846                           status	equ	0xFD8
   847                           
   848 ;; *************** function _OpenTimer1 *****************
   849 ;; Defined at:
   850 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\plib\Timers\t1open.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  config          1    wreg     unsigned char 
   853 ;;  config1         1   20[COMRAM] unsigned char 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  config          1   22[COMRAM] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   865 ;;      Params:         1       0       0       0       0       0       0       0       0
   866 ;;      Locals:         1       0       0       0       0       0       0       0       0
   867 ;;      Temps:          1       0       0       0       0       0       0       0       0
   868 ;;      Totals:         3       0       0       0       0       0       0       0       0
   869 ;;Total ram usage:        3 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    2
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_initTMR1
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text7
   880  000248                     __ptext7:
   881                           	opt stack 0
   882  000248                     _OpenTimer1:
   883                           	opt stack 27
   884                           
   885                           ;incstack = 0
   886                           ;OpenTimer1@config stored from wreg
   887  000248  6E17               	movwf	OpenTimer1@config,c
   888  00024A  5015               	movf	OpenTimer1@config1,w,c
   889  00024C  0BF3               	andlw	243
   890  00024E  6ECC               	movwf	4044,c	;volatile
   891  000250  C017  F016         	movff	OpenTimer1@config,??_OpenTimer1
   892  000254  0E7F               	movlw	127
   893  000256  1616               	andwf	??_OpenTimer1,f,c
   894  000258  90D8               	bcf	status,0,c
   895  00025A  3416               	rlcf	??_OpenTimer1,w,c
   896  00025C  6ECD               	movwf	4045,c	;volatile
   897  00025E  0E00               	movlw	0
   898  000260  6ECF               	movwf	4047,c	;volatile
   899  000262  0E00               	movlw	0
   900  000264  6ECE               	movwf	4046,c	;volatile
   901  000266  909E               	bcf	3998,0,c	;volatile
   902  000268  AE17               	btfss	OpenTimer1@config,7,c
   903  00026A  D002               	goto	l260
   904  00026C  809D               	bsf	3997,0,c	;volatile
   905  00026E  D001               	goto	l261
   906  000270                     l260:
   907  000270  909D               	bcf	3997,0,c	;volatile
   908  000272                     l261:
   909  000272  90A4               	bcf	4004,0,c	;volatile
   910  000274  A415               	btfss	OpenTimer1@config1,2,c
   911  000276  D002               	goto	l262
   912  000278  80A3               	bsf	4003,0,c	;volatile
   913  00027A  D001               	goto	l263
   914  00027C                     l262:
   915  00027C  90A3               	bcf	4003,0,c	;volatile
   916  00027E                     l263:
   917  00027E  BECC               	btfsc	4044,7,c	;volatile
   918  000280  86CC               	bsf	4044,3,c	;volatile
   919  000282  80CD               	bsf	4045,0,c	;volatile
   920  000284  0012               	return		;funcret
   921  000286                     __end_of_OpenTimer1:
   922                           	opt stack 0
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           intcon	equ	0xFF2
   928                           postinc0	equ	0xFEE
   929                           wreg	equ	0xFE8
   930                           postdec1	equ	0xFE5
   931                           fsr1l	equ	0xFE1
   932                           status	equ	0xFD8
   933                           
   934 ;; *************** function _initTMR0 *****************
   935 ;; Defined at:
   936 ;;		line 4 in file "custom_timer.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		None
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   950 ;;      Params:         0       0       0       0       0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    2
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text8
   965  0003B6                     __ptext8:
   966                           	opt stack 0
   967  0003B6                     _initTMR0:
   968                           	opt stack 28
   969                           
   970                           ;custom_timer.c: 5: T08BIT = 0;
   971                           
   972                           ;incstack = 0
   973  0003B6  9CD5               	bcf	4053,6,c	;volatile
   974                           
   975                           ;custom_timer.c: 6: T0CS = 0;
   976  0003B8  9AD5               	bcf	4053,5,c	;volatile
   977                           
   978                           ;custom_timer.c: 7: T0SE = 0;
   979  0003BA  98D5               	bcf	4053,4,c	;volatile
   980                           
   981                           ;custom_timer.c: 8: PSA = 1;
   982  0003BC  86D5               	bsf	4053,3,c	;volatile
   983  0003BE  0012               	return		;funcret
   984  0003C0                     __end_of_initTMR0:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postdec1	equ	0xFE5
   994                           fsr1l	equ	0xFE1
   995                           status	equ	0xFD8
   996                           
   997 ;; *************** function _initPWM *****************
   998 ;; Defined at:
   999 ;;		line 117 in file "main.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1013 ;;      Params:         0       0       0       0       0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1016 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1017 ;;Total ram usage:        0 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    2
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_main
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text9
  1028  00032A                     __ptext9:
  1029                           	opt stack 0
  1030  00032A                     _initPWM:
  1031                           	opt stack 28
  1032                           
  1033                           ;main.c: 118: TRISC1 = 0;
  1034                           
  1035                           ;incstack = 0
  1036  00032A  9294               	bcf	3988,1,c	;volatile
  1037                           
  1038                           ;main.c: 119: PORTC = 0;
  1039  00032C  0E00               	movlw	0
  1040  00032E  6E82               	movwf	3970,c	;volatile
  1041                           
  1042                           ;main.c: 120: PR2 = 0b00011000 ;
  1043  000330  0E18               	movlw	24
  1044  000332  6EBB               	movwf	4027,c	;volatile
  1045                           
  1046                           ;main.c: 121: CCP2CON = 0b00011100;
  1047  000334  0E1C               	movlw	28
  1048  000336  6E97               	movwf	3991,c	;volatile
  1049                           
  1050                           ;main.c: 122: CCPR2L = 0b00001100;
  1051  000338  0E0C               	movlw	12
  1052  00033A  6E90               	movwf	3984,c	;volatile
  1053                           
  1054                           ;main.c: 123: T2CKPS1 = 0;
  1055  00033C  92BA               	bcf	4026,1,c	;volatile
  1056                           
  1057                           ;main.c: 124: T2CKPS0 = 1;
  1058  00033E  80BA               	bsf	4026,0,c	;volatile
  1059  000340  0012               	return		;funcret
  1060  000342                     __end_of_initPWM:
  1061                           	opt stack 0
  1062                           tblptru	equ	0xFF8
  1063                           tblptrh	equ	0xFF7
  1064                           tblptrl	equ	0xFF6
  1065                           tablat	equ	0xFF5
  1066                           intcon	equ	0xFF2
  1067                           postinc0	equ	0xFEE
  1068                           wreg	equ	0xFE8
  1069                           postdec1	equ	0xFE5
  1070                           fsr1l	equ	0xFE1
  1071                           status	equ	0xFD8
  1072                           
  1073 ;; *************** function _initOscillator *****************
  1074 ;; Defined at:
  1075 ;;		line 105 in file "main.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1089 ;;      Params:         0       0       0       0       0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1092 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1093 ;;Total ram usage:        0 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    2
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text10
  1104  00036A                     __ptext10:
  1105                           	opt stack 0
  1106  00036A                     _initOscillator:
  1107                           	opt stack 28
  1108                           
  1109                           ;main.c: 106: OSCCONbits.IDLEN = 1;
  1110                           
  1111                           ;incstack = 0
  1112  00036A  8ED3               	bsf	4051,7,c	;volatile
  1113                           
  1114                           ;main.c: 107: OSCCONbits.IRCF = 0b111;
  1115  00036C  88D3               	bsf	4051,4,c	;volatile
  1116  00036E  8AD3               	bsf	4051,5,c	;volatile
  1117  000370  8CD3               	bsf	4051,6,c	;volatile
  1118                           
  1119                           ;main.c: 108: OSCCONbits.OSTS = 0;
  1120  000372  96D3               	bcf	4051,3,c	;volatile
  1121                           
  1122                           ;main.c: 109: OSCCONbits.HFIOFS = 0;
  1123  000374  94D3               	bcf	4051,2,c	;volatile
  1124                           
  1125                           ;main.c: 110: OSCCONbits.SCS = 0b00;
  1126  000376  0EFC               	movlw	-4
  1127  000378  16D3               	andwf	4051,f,c	;volatile
  1128  00037A  0012               	return		;funcret
  1129  00037C                     __end_of_initOscillator:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           intcon	equ	0xFF2
  1136                           postinc0	equ	0xFEE
  1137                           wreg	equ	0xFE8
  1138                           postdec1	equ	0xFE5
  1139                           fsr1l	equ	0xFE1
  1140                           status	equ	0xFD8
  1141                           
  1142 ;; *************** function _initLedPorts *****************
  1143 ;; Defined at:
  1144 ;;		line 95 in file "main.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		None
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1158 ;;      Params:         0       0       0       0       0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    2
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text11
  1173  0003C0                     __ptext11:
  1174                           	opt stack 0
  1175  0003C0                     _initLedPorts:
  1176                           	opt stack 28
  1177                           
  1178                           ;main.c: 96: TRISAbits.TRISA0 = 0;
  1179                           
  1180                           ;incstack = 0
  1181  0003C0  9092               	bcf	3986,0,c	;volatile
  1182                           
  1183                           ;main.c: 97: LATAbits.LATA0 = 0;
  1184  0003C2  9089               	bcf	3977,0,c	;volatile
  1185                           
  1186                           ;main.c: 98: TRISAbits.TRISA1 = 0;
  1187  0003C4  9292               	bcf	3986,1,c	;volatile
  1188                           
  1189                           ;main.c: 99: LATAbits.LATA1 = 0;
  1190  0003C6  9289               	bcf	3977,1,c	;volatile
  1191  0003C8  0012               	return		;funcret
  1192  0003CA                     __end_of_initLedPorts:
  1193                           	opt stack 0
  1194                           tblptru	equ	0xFF8
  1195                           tblptrh	equ	0xFF7
  1196                           tblptrl	equ	0xFF6
  1197                           tablat	equ	0xFF5
  1198                           intcon	equ	0xFF2
  1199                           postinc0	equ	0xFEE
  1200                           wreg	equ	0xFE8
  1201                           postdec1	equ	0xFE5
  1202                           fsr1l	equ	0xFE1
  1203                           status	equ	0xFD8
  1204                           
  1205 ;; *************** function _initADCON *****************
  1206 ;; Defined at:
  1207 ;;		line 72 in file "main.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1221 ;;      Params:         0       0       0       0       0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    2
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text12
  1236  0002BC                     __ptext12:
  1237                           	opt stack 0
  1238  0002BC                     _initADCON:
  1239                           	opt stack 28
  1240                           
  1241                           ;main.c: 74: ADCON0bits.ADON = 1;
  1242                           
  1243                           ;incstack = 0
  1244  0002BC  80C2               	bsf	4034,0,c	;volatile
  1245                           
  1246                           ;main.c: 75: ADCON0bits.GO_nDONE = 0;
  1247  0002BE  92C2               	bcf	4034,1,c	;volatile
  1248                           
  1249                           ;main.c: 76: ADCON0bits.CHS = 0b01001;
  1250  0002C0  84C2               	bsf	4034,2,c	;volatile
  1251  0002C2  96C2               	bcf	4034,3,c	;volatile
  1252  0002C4  98C2               	bcf	4034,4,c	;volatile
  1253  0002C6  8AC2               	bsf	4034,5,c	;volatile
  1254  0002C8  9CC2               	bcf	4034,6,c	;volatile
  1255                           
  1256                           ;main.c: 77: ANSELBbits.ANSB3 = 1;
  1257  0002CA  010F               	movlb	15	; () banked
  1258  0002CC  875C               	bsf	92,3,b	;volatile
  1259                           
  1260                           ;main.c: 78: TRISBbits.TRISB3 = 1;
  1261  0002CE  8693               	bsf	3987,3,c	;volatile
  1262                           
  1263                           ;main.c: 80: ADCON1bits.TRIGSEL = 0;
  1264  0002D0  9EC1               	bcf	4033,7,c	;volatile
  1265                           
  1266                           ; BSR set to: 15
  1267                           ;main.c: 81: ADCON1bits.PVCFG = 0;
  1268  0002D2  0EF3               	movlw	-13
  1269  0002D4  16C1               	andwf	4033,f,c	;volatile
  1270                           
  1271                           ;main.c: 82: ADCON1bits.NVCFG = 0;
  1272  0002D6  0EFC               	movlw	-4
  1273  0002D8  16C1               	andwf	4033,f,c	;volatile
  1274                           
  1275                           ; BSR set to: 15
  1276                           ;main.c: 84: ADCON2bits.ADFM = 0;
  1277  0002DA  9EC0               	bcf	4032,7,c	;volatile
  1278                           
  1279                           ;main.c: 85: ADCON2bits.ACQT = 0b100;
  1280  0002DC  50C0               	movf	4032,w,c	;volatile
  1281  0002DE  0BC7               	andlw	-57
  1282  0002E0  0920               	iorlw	32
  1283  0002E2  6EC0               	movwf	4032,c	;volatile
  1284                           
  1285                           ;main.c: 86: ADCON2bits.ADCS = 0b101;
  1286  0002E4  50C0               	movf	4032,w,c	;volatile
  1287  0002E6  0BF8               	andlw	-8
  1288  0002E8  0905               	iorlw	5
  1289  0002EA  6EC0               	movwf	4032,c	;volatile
  1290                           
  1291                           ; BSR set to: 15
  1292                           ;main.c: 88: PIR1bits.ADIF = 0;
  1293  0002EC  9C9E               	bcf	3998,6,c	;volatile
  1294                           
  1295                           ; BSR set to: 15
  1296                           ;main.c: 89: PIE1bits.ADIE = 1;
  1297  0002EE  8C9D               	bsf	3997,6,c	;volatile
  1298                           
  1299                           ; BSR set to: 15
  1300  0002F0  0012               	return		;funcret
  1301  0002F2                     __end_of_initADCON:
  1302                           	opt stack 0
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           intcon	equ	0xFF2
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec1	equ	0xFE5
  1311                           fsr1l	equ	0xFE1
  1312                           status	equ	0xFD8
  1313                           
  1314 ;; *************** function _interrupt_service_routine *****************
  1315 ;; Defined at:
  1316 ;;		line 177 in file "main.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  sensor1_val     2   18[COMRAM] int 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2, status,0, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0
  1331 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1332 ;;      Temps:         18       0       0       0       0       0       0       0       0
  1333 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1334 ;;Total ram usage:       20 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    1
  1337 ;; This function calls:
  1338 ;;		_startADC
  1339 ;;		_startPWM
  1340 ;;		_startTimer1
  1341 ;;		_stopPWM
  1342 ;;		_stopTimer1
  1343 ;;		i2_startTMR0For1kHz
  1344 ;; This function is called by:
  1345 ;;		Interrupt level 2
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	intcode
  1350  000008                     __pintcode:
  1351                           	opt stack 0
  1352  000008                     _interrupt_service_routine:
  1353                           	opt stack 26
  1354                           
  1355                           ; BSR set to: 15
  1356                           ;incstack = 0
  1357  000008  8230               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1358  00000A  CFFA F005          	movff	pclath,??_interrupt_service_routine+4
  1359  00000E  CFFB F006          	movff	pclatu,??_interrupt_service_routine+5
  1360  000012  CFE9 F007          	movff	fsr0l,??_interrupt_service_routine+6
  1361  000016  CFEA F008          	movff	fsr0h,??_interrupt_service_routine+7
  1362  00001A  CFE1 F009          	movff	fsr1l,??_interrupt_service_routine+8
  1363  00001E  CFE2 F00A          	movff	fsr1h,??_interrupt_service_routine+9
  1364  000022  CFD9 F00B          	movff	fsr2l,??_interrupt_service_routine+10
  1365  000026  CFDA F00C          	movff	fsr2h,??_interrupt_service_routine+11
  1366  00002A  CFF3 F00D          	movff	prodl,??_interrupt_service_routine+12
  1367  00002E  CFF4 F00E          	movff	prodh,??_interrupt_service_routine+13
  1368  000032  CFF6 F00F          	movff	tblptrl,??_interrupt_service_routine+14
  1369  000036  CFF7 F010          	movff	tblptrh,??_interrupt_service_routine+15
  1370  00003A  CFF8 F011          	movff	tblptru,??_interrupt_service_routine+16
  1371  00003E  CFF5 F012          	movff	tablat,??_interrupt_service_routine+17
  1372                           
  1373                           ;main.c: 179: if (INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  1374  000042  BAF2               	btfsc	intcon,5,c	;volatile
  1375  000044  A4F2               	btfss	intcon,2,c	;volatile
  1376  000046  D059               	goto	i2l1088
  1377                           
  1378                           ;main.c: 180: INTCONbits.TMR0IF = 0;
  1379  000048  94F2               	bcf	intcon,2,c	;volatile
  1380                           
  1381                           ;main.c: 182: if (listening) {
  1382  00004A  5029               	movf	_listening,w,c	;volatile
  1383  00004C  B4D8               	btfsc	status,2,c
  1384  00004E  D01B               	goto	i2l1054
  1385                           
  1386                           ;main.c: 183: if (tmr0_overflow_counter == 35) {
  1387  000050  0E23               	movlw	35
  1388  000052  1820               	xorwf	_tmr0_overflow_counter,w,c	;volatile
  1389  000054  1021               	iorwf	_tmr0_overflow_counter+1,w,c	;volatile
  1390  000056  A4D8               	btfss	status,2,c
  1391  000058  D04C               	goto	i2l1084
  1392                           
  1393                           ;main.c: 184: tmr0_overflow_counter = 0;
  1394  00005A  0E00               	movlw	0
  1395  00005C  6E21               	movwf	_tmr0_overflow_counter+1,c	;volatile
  1396  00005E  0E00               	movlw	0
  1397  000060  6E20               	movwf	_tmr0_overflow_counter,c	;volatile
  1398                           
  1399                           ;main.c: 185: send_ping = 1;
  1400  000062  0E01               	movlw	1
  1401  000064  6E2E               	movwf	_send_ping,c	;volatile
  1402                           
  1403                           ;main.c: 186: listening = 0;
  1404  000066  0E00               	movlw	0
  1405  000068  6E29               	movwf	_listening,c	;volatile
  1406                           
  1407                           ;main.c: 188: if (RTT_received) {
  1408  00006A  5026               	movf	_RTT_received,w,c	;volatile
  1409  00006C  B4D8               	btfsc	status,2,c
  1410  00006E  D003               	goto	i2l1042
  1411                           
  1412                           ;main.c: 189: no_RTT_counter = 0;
  1413  000070  0E00               	movlw	0
  1414  000072  6E2A               	movwf	_no_RTT_counter,c	;volatile
  1415                           
  1416                           ;main.c: 190: } else {
  1417  000074  D001               	goto	i2l1044
  1418  000076                     i2l1042:
  1419                           
  1420                           ;main.c: 191: ++no_RTT_counter;
  1421  000076  2A2A               	incf	_no_RTT_counter,f,c	;volatile
  1422  000078                     i2l1044:
  1423                           
  1424                           ;main.c: 192: }
  1425                           ;main.c: 194: RTT_received = 0;
  1426  000078  0E00               	movlw	0
  1427  00007A  6E26               	movwf	_RTT_received,c	;volatile
  1428                           
  1429                           ;main.c: 195: notSentToUART = 1;
  1430  00007C  0E01               	movlw	1
  1431  00007E  6E2D               	movwf	_notSentToUART,c	;volatile
  1432                           
  1433                           ;main.c: 196: ADIF = 0;
  1434  000080  9C9E               	bcf	3998,6,c	;volatile
  1435                           
  1436                           ;main.c: 197: ADIE = 0;
  1437  000082  9C9D               	bcf	3997,6,c	;volatile
  1438                           
  1439                           ;main.c: 198: } else {
  1440  000084  D038               	goto	i2l1086
  1441  000086                     i2l1054:
  1442  000086  502B               	movf	_ping_send,w,c	;volatile
  1443  000088  B4D8               	btfsc	status,2,c
  1444  00008A  D007               	goto	i2l1062
  1445                           
  1446                           ;main.c: 202: stopPWM();
  1447  00008C  ECE8  F001         	call	_stopPWM	;wreg free
  1448                           
  1449                           ;main.c: 203: ping_send = 0;
  1450  000090  0E00               	movlw	0
  1451  000092  6E2B               	movwf	_ping_send,c	;volatile
  1452                           
  1453                           ;main.c: 204: blocking_sensors = 1;
  1454  000094  0E01               	movlw	1
  1455  000096  6E28               	movwf	_blocking_sensors,c	;volatile
  1456                           
  1457                           ;main.c: 205: } else if (send_ping) {
  1458  000098  D02E               	goto	i2l1086
  1459  00009A                     i2l1062:
  1460  00009A  502E               	movf	_send_ping,w,c	;volatile
  1461  00009C  B4D8               	btfsc	status,2,c
  1462  00009E  D015               	goto	i2l1074
  1463                           
  1464                           ;main.c: 206: startTimer1();
  1465  0000A0  ECA1  F001         	call	_startTimer1	;wreg free
  1466                           
  1467                           ;main.c: 207: LATAbits.LATA1 = !LATAbits.LATA1;
  1468  0000A4  B289               	btfsc	3977,1,c	;volatile
  1469  0000A6  D003               	goto	i2u17_40
  1470  0000A8  6A01               	clrf	??_interrupt_service_routine& (0+255),c
  1471  0000AA  2A01               	incf	??_interrupt_service_routine& (0+255),f,c
  1472  0000AC  D001               	goto	i2u18_48
  1473  0000AE                     i2u17_40:
  1474  0000AE  6A01               	clrf	??_interrupt_service_routine& (0+255),c
  1475  0000B0                     i2u18_48:
  1476  0000B0  4601               	rlncf	??_interrupt_service_routine,f,c
  1477  0000B2  5089               	movf	3977,w,c	;volatile
  1478  0000B4  1801               	xorwf	??_interrupt_service_routine,w,c
  1479  0000B6  0BFD               	andlw	-3
  1480  0000B8  1801               	xorwf	??_interrupt_service_routine,w,c
  1481  0000BA  6E89               	movwf	3977,c	;volatile
  1482                           
  1483                           ;main.c: 208: startPWM();
  1484  0000BC  ECEB  F001         	call	_startPWM	;wreg free
  1485                           
  1486                           ;main.c: 209: ping_send = 1;
  1487  0000C0  0E01               	movlw	1
  1488  0000C2  6E2B               	movwf	_ping_send,c	;volatile
  1489                           
  1490                           ;main.c: 210: send_ping = 0;
  1491  0000C4  0E00               	movlw	0
  1492  0000C6  6E2E               	movwf	_send_ping,c	;volatile
  1493                           
  1494                           ;main.c: 211: } else if (blocking_sensors && tmr0_overflow_counter == 15) {
  1495  0000C8  D016               	goto	i2l1086
  1496  0000CA                     i2l1074:
  1497  0000CA  5028               	movf	_blocking_sensors,w,c	;volatile
  1498  0000CC  B4D8               	btfsc	status,2,c
  1499  0000CE  D011               	goto	i2l1084
  1500  0000D0  0E0F               	movlw	15
  1501  0000D2  1820               	xorwf	_tmr0_overflow_counter,w,c	;volatile
  1502  0000D4  1021               	iorwf	_tmr0_overflow_counter+1,w,c	;volatile
  1503  0000D6  A4D8               	btfss	status,2,c
  1504  0000D8  D00C               	goto	i2l1084
  1505                           
  1506                           ;main.c: 212: tmr0_overflow_counter = 0;
  1507  0000DA  0E00               	movlw	0
  1508  0000DC  6E21               	movwf	_tmr0_overflow_counter+1,c	;volatile
  1509  0000DE  0E00               	movlw	0
  1510  0000E0  6E20               	movwf	_tmr0_overflow_counter,c	;volatile
  1511                           
  1512                           ;main.c: 213: blocking_sensors = 0;
  1513  0000E2  0E00               	movlw	0
  1514  0000E4  6E28               	movwf	_blocking_sensors,c	;volatile
  1515                           
  1516                           ;main.c: 214: listening = 1;
  1517  0000E6  0E01               	movlw	1
  1518  0000E8  6E29               	movwf	_listening,c	;volatile
  1519                           
  1520                           ;main.c: 215: ADIE = 1;
  1521  0000EA  8C9D               	bsf	3997,6,c	;volatile
  1522                           
  1523                           ;main.c: 217: startADC();
  1524  0000EC  ECF0  F001         	call	_startADC	;wreg free
  1525                           
  1526                           ;main.c: 218: } else {
  1527  0000F0  D002               	goto	i2l1086
  1528  0000F2                     i2l1084:
  1529                           
  1530                           ;main.c: 219: ++tmr0_overflow_counter;
  1531  0000F2  4A20               	infsnz	_tmr0_overflow_counter,f,c	;volatile
  1532  0000F4  2A21               	incf	_tmr0_overflow_counter+1,f,c	;volatile
  1533  0000F6                     i2l1086:
  1534                           
  1535                           ;main.c: 220: }
  1536                           ;main.c: 221: startTMR0For1kHz();
  1537  0000F6  ECC6  F001         	call	i2_startTMR0For1kHz	;wreg free
  1538  0000FA                     i2l1088:
  1539                           
  1540                           ;main.c: 222: }
  1541                           ;main.c: 224: if (TMR1IE && TMR1IF) {
  1542  0000FA  B09D               	btfsc	3997,0,c	;volatile
  1543  0000FC  A09E               	btfss	3998,0,c	;volatile
  1544  0000FE  D001               	goto	i2l167
  1545                           
  1546                           ;main.c: 225: TMR1IF = 0;
  1547  000100  909E               	bcf	3998,0,c	;volatile
  1548  000102                     i2l167:
  1549                           
  1550                           ;main.c: 227: }
  1551                           ;main.c: 230: if (PIE1bits.ADIE && PIR1bits.ADIF) {
  1552  000102  BC9D               	btfsc	3997,6,c	;volatile
  1553  000104  AC9E               	btfss	3998,6,c	;volatile
  1554  000106  D040               	goto	i2l172
  1555                           
  1556                           ;main.c: 231: PIR1bits.ADIF = 0;
  1557  000108  9C9E               	bcf	3998,6,c	;volatile
  1558                           
  1559                           ;main.c: 232: int sensor1_val = (ADRESH << 2) | (ADRESL >> 6);
  1560  00010A  CFC3 F001          	movff	4035,??_interrupt_service_routine	;volatile
  1561  00010E  0E06               	movlw	6
  1562  000110  6E02               	movwf	(??_interrupt_service_routine+1)& (0+255),c
  1563  000112                     i2u25_45:
  1564  000112  90D8               	bcf	status,0,c
  1565  000114  3201               	rrcf	??_interrupt_service_routine,f,c
  1566  000116  2E02               	decfsz	(??_interrupt_service_routine+1)& (0+255),f,c
  1567  000118  D7FC               	goto	i2u25_45
  1568  00011A  5001               	movf	??_interrupt_service_routine,w,c
  1569  00011C  CFC4 F003          	movff	4036,??_interrupt_service_routine+2	;volatile
  1570  000120  6A04               	clrf	(??_interrupt_service_routine+3)& (0+255),c
  1571  000122  90D8               	bcf	status,0,c
  1572  000124  3603               	rlcf	??_interrupt_service_routine+2,f,c
  1573  000126  3604               	rlcf	??_interrupt_service_routine+3,f,c
  1574  000128  90D8               	bcf	status,0,c
  1575  00012A  3603               	rlcf	??_interrupt_service_routine+2,f,c
  1576  00012C  3604               	rlcf	??_interrupt_service_routine+3,f,c
  1577  00012E  1003               	iorwf	??_interrupt_service_routine+2,w,c
  1578  000130  6E13               	movwf	interrupt_service_routine@sensor1_val,c
  1579  000132  5004               	movf	??_interrupt_service_routine+3,w,c
  1580  000134  6E14               	movwf	interrupt_service_routine@sensor1_val+1,c
  1581                           
  1582                           ;main.c: 234: if (sensor1_val < 472 || sensor1_val > 552) {
  1583  000136  BE14               	btfsc	interrupt_service_routine@sensor1_val+1,7,c
  1584  000138  D00E               	goto	i2l1102
  1585  00013A  0ED8               	movlw	216
  1586  00013C  5C13               	subwf	interrupt_service_routine@sensor1_val,w,c
  1587  00013E  0E01               	movlw	1
  1588  000140  5814               	subwfb	interrupt_service_routine@sensor1_val+1,w,c
  1589  000142  A0D8               	btfss	status,0,c
  1590  000144  D008               	goto	i2l1102
  1591  000146  BE14               	btfsc	interrupt_service_routine@sensor1_val+1,7,c
  1592  000148  D01D               	goto	i2l1114
  1593  00014A  0E29               	movlw	41
  1594  00014C  5C13               	subwf	interrupt_service_routine@sensor1_val,w,c
  1595  00014E  0E02               	movlw	2
  1596  000150  5814               	subwfb	interrupt_service_routine@sensor1_val+1,w,c
  1597  000152  A0D8               	btfss	status,0,c
  1598  000154  D017               	goto	i2l1114
  1599  000156                     i2l1102:
  1600                           
  1601                           ;main.c: 235: stopTimer1();
  1602  000156  ECE5  F001         	call	_stopTimer1	;wreg free
  1603                           
  1604                           ;main.c: 236: tmr1_counter_low = TMR1L;
  1605  00015A  CFCE F024          	movff	4046,_tmr1_counter_low	;volatile
  1606  00015E  6A25               	clrf	_tmr1_counter_low+1,c	;volatile
  1607                           
  1608                           ;main.c: 237: tmr1_counter_high = TMR1H;
  1609  000160  CFCF F022          	movff	4047,_tmr1_counter_high	;volatile
  1610  000164  6A23               	clrf	_tmr1_counter_high+1,c	;volatile
  1611                           
  1612                           ;main.c: 238: LATAbits.LATA1 = !LATAbits.LATA1;
  1613  000166  B289               	btfsc	3977,1,c	;volatile
  1614  000168  D003               	goto	i2u28_40
  1615  00016A  6A01               	clrf	??_interrupt_service_routine& (0+255),c
  1616  00016C  2A01               	incf	??_interrupt_service_routine& (0+255),f,c
  1617  00016E  D001               	goto	i2u29_48
  1618  000170                     i2u28_40:
  1619  000170  6A01               	clrf	??_interrupt_service_routine& (0+255),c
  1620  000172                     i2u29_48:
  1621  000172  4601               	rlncf	??_interrupt_service_routine,f,c
  1622  000174  5089               	movf	3977,w,c	;volatile
  1623  000176  1801               	xorwf	??_interrupt_service_routine,w,c
  1624  000178  0BFD               	andlw	-3
  1625  00017A  1801               	xorwf	??_interrupt_service_routine,w,c
  1626  00017C  6E89               	movwf	3977,c	;volatile
  1627                           
  1628                           ;main.c: 240: RTT_received = 1;
  1629  00017E  0E01               	movlw	1
  1630  000180  6E26               	movwf	_RTT_received,c	;volatile
  1631                           
  1632                           ;main.c: 241: ADIE = 0;
  1633  000182  9C9D               	bcf	3997,6,c	;volatile
  1634  000184                     i2l1114:
  1635                           
  1636                           ;main.c: 242: }
  1637                           ;main.c: 243: startADC();
  1638  000184  ECF0  F001         	call	_startADC	;wreg free
  1639  000188                     i2l172:
  1640  000188  C012  FFF5         	movff	??_interrupt_service_routine+17,tablat
  1641  00018C  C011  FFF8         	movff	??_interrupt_service_routine+16,tblptru
  1642  000190  C010  FFF7         	movff	??_interrupt_service_routine+15,tblptrh
  1643  000194  C00F  FFF6         	movff	??_interrupt_service_routine+14,tblptrl
  1644  000198  C00E  FFF4         	movff	??_interrupt_service_routine+13,prodh
  1645  00019C  C00D  FFF3         	movff	??_interrupt_service_routine+12,prodl
  1646  0001A0  C00C  FFDA         	movff	??_interrupt_service_routine+11,fsr2h
  1647  0001A4  C00B  FFD9         	movff	??_interrupt_service_routine+10,fsr2l
  1648  0001A8  C00A  FFE2         	movff	??_interrupt_service_routine+9,fsr1h
  1649  0001AC  C009  FFE1         	movff	??_interrupt_service_routine+8,fsr1l
  1650  0001B0  C008  FFEA         	movff	??_interrupt_service_routine+7,fsr0h
  1651  0001B4  C007  FFE9         	movff	??_interrupt_service_routine+6,fsr0l
  1652  0001B8  C006  FFFB         	movff	??_interrupt_service_routine+5,pclatu
  1653  0001BC  C005  FFFA         	movff	??_interrupt_service_routine+4,pclath
  1654  0001C0  9230               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1655  0001C2  0011               	retfie		f
  1656  0001C4                     __end_of_interrupt_service_routine:
  1657                           	opt stack 0
  1658                           pclatu	equ	0xFFB
  1659                           pclath	equ	0xFFA
  1660                           tblptru	equ	0xFF8
  1661                           tblptrh	equ	0xFF7
  1662                           tblptrl	equ	0xFF6
  1663                           tablat	equ	0xFF5
  1664                           prodh	equ	0xFF4
  1665                           prodl	equ	0xFF3
  1666                           intcon	equ	0xFF2
  1667                           postinc0	equ	0xFEE
  1668                           fsr0h	equ	0xFEA
  1669                           fsr0l	equ	0xFE9
  1670                           wreg	equ	0xFE8
  1671                           postdec1	equ	0xFE5
  1672                           fsr1h	equ	0xFE2
  1673                           fsr1l	equ	0xFE1
  1674                           fsr2h	equ	0xFDA
  1675                           fsr2l	equ	0xFD9
  1676                           status	equ	0xFD8
  1677                           
  1678 ;; *************** function i2_startTMR0For1kHz *****************
  1679 ;; Defined at:
  1680 ;;		line 12 in file "custom_timer.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1694 ;;      Params:         0       0       0       0       0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1697 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1698 ;;Total ram usage:        0 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_interrupt_service_routine
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text14
  1708  00038C                     __ptext14:
  1709                           	opt stack 0
  1710  00038C                     i2_startTMR0For1kHz:
  1711                           	opt stack 26
  1712                           
  1713                           ;custom_timer.c: 13: TMR0H = 0xF0;
  1714                           
  1715                           ;incstack = 0
  1716  00038C  0EF0               	movlw	240
  1717  00038E  6ED7               	movwf	4055,c	;volatile
  1718                           
  1719                           ;custom_timer.c: 14: TMR0L = 0x60;
  1720  000390  0E60               	movlw	96
  1721  000392  6ED6               	movwf	4054,c	;volatile
  1722                           
  1723                           ;custom_timer.c: 15: INTCONbits.TMR0IF = 0;
  1724  000394  94F2               	bcf	intcon,2,c	;volatile
  1725                           
  1726                           ;custom_timer.c: 16: INTCONbits.TMR0IE = 1;
  1727  000396  8AF2               	bsf	intcon,5,c	;volatile
  1728                           
  1729                           ;custom_timer.c: 17: TMR0ON = 1;
  1730  000398  8ED5               	bsf	4053,7,c	;volatile
  1731  00039A  0012               	return		;funcret
  1732  00039C                     __end_ofi2_startTMR0For1kHz:
  1733                           	opt stack 0
  1734                           pclatu	equ	0xFFB
  1735                           pclath	equ	0xFFA
  1736                           tblptru	equ	0xFF8
  1737                           tblptrh	equ	0xFF7
  1738                           tblptrl	equ	0xFF6
  1739                           tablat	equ	0xFF5
  1740                           prodh	equ	0xFF4
  1741                           prodl	equ	0xFF3
  1742                           intcon	equ	0xFF2
  1743                           postinc0	equ	0xFEE
  1744                           fsr0h	equ	0xFEA
  1745                           fsr0l	equ	0xFE9
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1h	equ	0xFE2
  1749                           fsr1l	equ	0xFE1
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _stopTimer1 *****************
  1755 ;; Defined at:
  1756 ;;		line 169 in file "main.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		None
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1770 ;;      Params:         0       0       0       0       0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_interrupt_service_routine
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text15
  1784  0003CA                     __ptext15:
  1785                           	opt stack 0
  1786  0003CA                     _stopTimer1:
  1787                           	opt stack 26
  1788                           
  1789                           ;main.c: 170: TMR1ON = 0;
  1790                           
  1791                           ;incstack = 0
  1792  0003CA  90CD               	bcf	4045,0,c	;volatile
  1793                           
  1794                           ;main.c: 171: TMR1IE = 0;
  1795  0003CC  909D               	bcf	3997,0,c	;volatile
  1796  0003CE  0012               	return		;funcret
  1797  0003D0                     __end_of_stopTimer1:
  1798                           	opt stack 0
  1799                           pclatu	equ	0xFFB
  1800                           pclath	equ	0xFFA
  1801                           tblptru	equ	0xFF8
  1802                           tblptrh	equ	0xFF7
  1803                           tblptrl	equ	0xFF6
  1804                           tablat	equ	0xFF5
  1805                           prodh	equ	0xFF4
  1806                           prodl	equ	0xFF3
  1807                           intcon	equ	0xFF2
  1808                           postinc0	equ	0xFEE
  1809                           fsr0h	equ	0xFEA
  1810                           fsr0l	equ	0xFE9
  1811                           wreg	equ	0xFE8
  1812                           postdec1	equ	0xFE5
  1813                           fsr1h	equ	0xFE2
  1814                           fsr1l	equ	0xFE1
  1815                           fsr2h	equ	0xFDA
  1816                           fsr2l	equ	0xFD9
  1817                           status	equ	0xFD8
  1818                           
  1819 ;; *************** function _stopPWM *****************
  1820 ;; Defined at:
  1821 ;;		line 134 in file "main.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		None
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1835 ;;      Params:         0       0       0       0       0       0       0       0       0
  1836 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1838 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1839 ;;Total ram usage:        0 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_interrupt_service_routine
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text16
  1849  0003D0                     __ptext16:
  1850                           	opt stack 0
  1851  0003D0                     _stopPWM:
  1852                           	opt stack 26
  1853                           
  1854                           ;main.c: 136: TMR2ON = 0;
  1855                           
  1856                           ;incstack = 0
  1857  0003D0  94BA               	bcf	4026,2,c	;volatile
  1858                           
  1859                           ;main.c: 137: TRISC1 = 1;
  1860  0003D2  8294               	bsf	3988,1,c	;volatile
  1861  0003D4  0012               	return		;funcret
  1862  0003D6                     __end_of_stopPWM:
  1863                           	opt stack 0
  1864                           pclatu	equ	0xFFB
  1865                           pclath	equ	0xFFA
  1866                           tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           prodh	equ	0xFF4
  1871                           prodl	equ	0xFF3
  1872                           intcon	equ	0xFF2
  1873                           postinc0	equ	0xFEE
  1874                           fsr0h	equ	0xFEA
  1875                           fsr0l	equ	0xFE9
  1876                           wreg	equ	0xFE8
  1877                           postdec1	equ	0xFE5
  1878                           fsr1h	equ	0xFE2
  1879                           fsr1l	equ	0xFE1
  1880                           fsr2h	equ	0xFDA
  1881                           fsr2l	equ	0xFD9
  1882                           status	equ	0xFD8
  1883                           
  1884 ;; *************** function _startTimer1 *****************
  1885 ;; Defined at:
  1886 ;;		line 157 in file "main.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1900 ;;      Params:         0       0       0       0       0       0       0       0       0
  1901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1903 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1904 ;;Total ram usage:        0 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_interrupt_service_routine
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text17
  1914  000342                     __ptext17:
  1915                           	opt stack 0
  1916  000342                     _startTimer1:
  1917                           	opt stack 26
  1918                           
  1919                           ;main.c: 161: tmr1_counter_high = 0;
  1920                           
  1921                           ;incstack = 0
  1922  000342  0E00               	movlw	0
  1923  000344  6E23               	movwf	_tmr1_counter_high+1,c	;volatile
  1924  000346  0E00               	movlw	0
  1925  000348  6E22               	movwf	_tmr1_counter_high,c	;volatile
  1926                           
  1927                           ;main.c: 162: TMR1H = 0;
  1928  00034A  0E00               	movlw	0
  1929  00034C  6ECF               	movwf	4047,c	;volatile
  1930                           
  1931                           ;main.c: 163: TMR1L = 0;
  1932  00034E  0E00               	movlw	0
  1933  000350  6ECE               	movwf	4046,c	;volatile
  1934                           
  1935                           ;main.c: 164: TMR1IE = 1;
  1936  000352  809D               	bsf	3997,0,c	;volatile
  1937                           
  1938                           ;main.c: 165: TMR1ON = 1;
  1939  000354  80CD               	bsf	4045,0,c	;volatile
  1940  000356  0012               	return		;funcret
  1941  000358                     __end_of_startTimer1:
  1942                           	opt stack 0
  1943                           pclatu	equ	0xFFB
  1944                           pclath	equ	0xFFA
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           prodh	equ	0xFF4
  1950                           prodl	equ	0xFF3
  1951                           intcon	equ	0xFF2
  1952                           postinc0	equ	0xFEE
  1953                           fsr0h	equ	0xFEA
  1954                           fsr0l	equ	0xFE9
  1955                           wreg	equ	0xFE8
  1956                           postdec1	equ	0xFE5
  1957                           fsr1h	equ	0xFE2
  1958                           fsr1l	equ	0xFE1
  1959                           fsr2h	equ	0xFDA
  1960                           fsr2l	equ	0xFD9
  1961                           status	equ	0xFD8
  1962                           
  1963 ;; *************** function _startPWM *****************
  1964 ;; Defined at:
  1965 ;;		line 128 in file "main.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		None
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1979 ;;      Params:         0       0       0       0       0       0       0       0       0
  1980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1982 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1983 ;;Total ram usage:        0 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_interrupt_service_routine
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text18
  1993  0003D6                     __ptext18:
  1994                           	opt stack 0
  1995  0003D6                     _startPWM:
  1996                           	opt stack 26
  1997                           
  1998                           ;main.c: 129: TRISC1 = 0;
  1999                           
  2000                           ;incstack = 0
  2001  0003D6  9294               	bcf	3988,1,c	;volatile
  2002                           
  2003                           ;main.c: 130: TMR2ON = 1;
  2004  0003D8  84BA               	bsf	4026,2,c	;volatile
  2005  0003DA  0012               	return		;funcret
  2006  0003DC                     __end_of_startPWM:
  2007                           	opt stack 0
  2008                           pclatu	equ	0xFFB
  2009                           pclath	equ	0xFFA
  2010                           tblptru	equ	0xFF8
  2011                           tblptrh	equ	0xFF7
  2012                           tblptrl	equ	0xFF6
  2013                           tablat	equ	0xFF5
  2014                           prodh	equ	0xFF4
  2015                           prodl	equ	0xFF3
  2016                           intcon	equ	0xFF2
  2017                           postinc0	equ	0xFEE
  2018                           fsr0h	equ	0xFEA
  2019                           fsr0l	equ	0xFE9
  2020                           wreg	equ	0xFE8
  2021                           postdec1	equ	0xFE5
  2022                           fsr1h	equ	0xFE2
  2023                           fsr1l	equ	0xFE1
  2024                           fsr2h	equ	0xFDA
  2025                           fsr2l	equ	0xFD9
  2026                           status	equ	0xFD8
  2027                           
  2028 ;; *************** function _startADC *****************
  2029 ;; Defined at:
  2030 ;;		line 113 in file "main.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		None
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2044 ;;      Params:         0       0       0       0       0       0       0       0       0
  2045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2047 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2048 ;;Total ram usage:        0 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_interrupt_service_routine
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text19
  2058  0003E0                     __ptext19:
  2059                           	opt stack 0
  2060  0003E0                     _startADC:
  2061                           	opt stack 26
  2062                           
  2063                           ;main.c: 114: ADCON0bits.GO = 1;
  2064                           
  2065                           ;incstack = 0
  2066  0003E0  82C2               	bsf	4034,1,c	;volatile
  2067  0003E2  0012               	return		;funcret
  2068  0003E4                     __end_of_startADC:
  2069                           	opt stack 0
  2070  0000                     pclatu	equ	0xFFB
  2071                           pclath	equ	0xFFA
  2072                           tblptru	equ	0xFF8
  2073                           tblptrh	equ	0xFF7
  2074                           tblptrl	equ	0xFF6
  2075                           tablat	equ	0xFF5
  2076                           prodh	equ	0xFF4
  2077                           prodl	equ	0xFF3
  2078                           intcon	equ	0xFF2
  2079                           postinc0	equ	0xFEE
  2080                           fsr0h	equ	0xFEA
  2081                           fsr0l	equ	0xFE9
  2082                           wreg	equ	0xFE8
  2083                           postdec1	equ	0xFE5
  2084                           fsr1h	equ	0xFE2
  2085                           fsr1l	equ	0xFE1
  2086                           fsr2h	equ	0xFDA
  2087                           fsr2l	equ	0xFD9
  2088                           status	equ	0xFD8
  2089                           pclatu	equ	0xFFB
  2090                           pclath	equ	0xFFA
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           intcon	equ	0xFF2
  2098                           postinc0	equ	0xFEE
  2099                           fsr0h	equ	0xFEA
  2100                           fsr0l	equ	0xFE9
  2101                           wreg	equ	0xFE8
  2102                           postdec1	equ	0xFE5
  2103                           fsr1h	equ	0xFE2
  2104                           fsr1l	equ	0xFE1
  2105                           fsr2h	equ	0xFDA
  2106                           fsr2l	equ	0xFD9
  2107                           status	equ	0xFD8
  2108                           
  2109                           	psect	rparam
  2110  0000                     pclatu	equ	0xFFB
  2111                           pclath	equ	0xFFA
  2112                           tblptru	equ	0xFF8
  2113                           tblptrh	equ	0xFF7
  2114                           tblptrl	equ	0xFF6
  2115                           tablat	equ	0xFF5
  2116                           prodh	equ	0xFF4
  2117                           prodl	equ	0xFF3
  2118                           intcon	equ	0xFF2
  2119                           postinc0	equ	0xFEE
  2120                           fsr0h	equ	0xFEA
  2121                           fsr0l	equ	0xFE9
  2122                           wreg	equ	0xFE8
  2123                           postdec1	equ	0xFE5
  2124                           fsr1h	equ	0xFE2
  2125                           fsr1l	equ	0xFE1
  2126                           fsr2h	equ	0xFDA
  2127                           fsr2l	equ	0xFD9
  2128                           status	equ	0xFD8
  2129                           
  2130                           	psect	temp
  2131  000030                     btemp:
  2132                           	opt stack 0
  2133  000030                     	ds	1
  2134  0000                     int$flags	set	btemp
  2135                           pclatu	equ	0xFFB
  2136                           pclath	equ	0xFFA
  2137                           tblptru	equ	0xFF8
  2138                           tblptrh	equ	0xFF7
  2139                           tblptrl	equ	0xFF6
  2140                           tablat	equ	0xFF5
  2141                           prodh	equ	0xFF4
  2142                           prodl	equ	0xFF3
  2143                           intcon	equ	0xFF2
  2144                           postinc0	equ	0xFEE
  2145                           fsr0h	equ	0xFEA
  2146                           fsr0l	equ	0xFE9
  2147                           wreg	equ	0xFE8
  2148                           postdec1	equ	0xFE5
  2149                           fsr1h	equ	0xFE2
  2150                           fsr1l	equ	0xFE1
  2151                           fsr2h	equ	0xFDA
  2152                           fsr2l	equ	0xFD9
  2153                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_send_coord
    _send_coord->_putc_when_ready
    _putc_when_ready->_Write1USART
    _initTMR1->_OpenTimer1

Critical Paths under _interrupt_service_routine in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_service_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_service_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_service_routine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_service_routine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_service_routine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_service_routine in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_service_routine in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_service_routine in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     447
                                             26 COMRAM     3     3      0
                          _initADCON
                       _initLedPorts
                     _initOscillator
                            _initPWM
                           _initTMR0
                           _initTMR1
                           _initUART
                         _send_coord
                   _startTMR0For1kHz
 ---------------------------------------------------------------------------------
 (1) _startTMR0For1kHz                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_coord                                           4     0      4     246
                                             22 COMRAM     4     0      4
                    _putc_when_ready
 ---------------------------------------------------------------------------------
 (2) _putc_when_ready                                      1     1      0      30
                                             21 COMRAM     1     1      0
                        _Write1USART
 ---------------------------------------------------------------------------------
 (3) _Write1USART                                          1     1      0      15
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTMR1                                             0     0      0     152
                         _OpenTimer1
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           3     2      1     152
                                             20 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _initTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOscillator                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLedPorts                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADCON                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupt_service_routine                           20    20      0      30
                                              0 COMRAM    20    20      0
                           _startADC
                           _startPWM
                        _startTimer1
                            _stopPWM
                         _stopTimer1
                 i2_startTMR0For1kHz
 ---------------------------------------------------------------------------------
 (5) i2_startTMR0For1kHz                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _stopTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _stopPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _startTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _startPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _startADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initADCON
   _initLedPorts
   _initOscillator
   _initPWM
   _initTMR0
   _initTMR1
     _OpenTimer1
   _initUART
   _send_coord
     _putc_when_ready
       _Write1USART
   _startTMR0For1kHz

 _interrupt_service_routine (ROOT)
   _startADC
   _startPWM
   _startTimer1
   _stopPWM
   _stopTimer1
   i2_startTMR0For1kHz

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      2F       1       50.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F       6        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri May 13 22:24:43 2016

                         _startTimer1 0342                                   l218 039E  
                                 l260 0270                                   l180 021E  
                                 l261 0272                                   l262 027C  
                                 l263 027E                                   l910 0364  
                                 _PR2 000FBB                                   _PSA 007EAB  
                      send_coord@x_cm 0017                        send_coord@y_cm 0019  
                                 wreg 000FE8                            _TXSTA1bits 000FAC  
                        __CFG_LVP$OFF 000000                                  l1230 0206  
                                l1226 01F8                                  _ADIE 007CEE  
                                _ADIF 007CF6                                  _GIEH 007F97  
                                _BRGH 007D62                                  _CREN 007D5C  
                                _T0CS 007EAD                                  _T0SE 007EAC  
                                _PEIE 007F96                                  _SPEN 007D5F  
                                _TXEN 007D65                                  _SYNC 007D64  
                                _main 01C8                                  _mode 002C  
                                fsr0h 000FEA                                  fsr1h 000FE2  
                                fsr0l 000FE9                                  fsr2h 000FDA  
                                fsr1l 000FE1                                  fsr2l 000FD9  
                                btemp 0030                                  pclat 000FFA  
                                prodh 000FF4                                  prodl 000FF3  
                                start 01C4                         __CFG_MCLRE$ON 000000  
                        ___param_bank 000010                                 ?_main 0001  
                               _T1CON 000FCD                                 _LATC6 007C5E  
                               _LATC7 007C5F                        __CFG_DEBUG$OFF 000000  
                               i2l172 0188                                 i2l167 0102  
                               _TMR0H 000FD7                                 _TMR1H 000FCF  
                               _TMR0L 000FD6                                 _TMR1L 000FCE  
                               _SPBRG 000FAF                                 _PORTC 000F82  
                   ??_putc_when_ready 0016                       __end_of_initPWM 0342  
                               tablat 000FF5                      _startTMR0For1kHz 037C  
                               status 000FD8                       __end_of_stopPWM 03D6  
                       ?_initLedPorts 0001                       __initialization 0286  
                        __end_of_main 0248                                ??_main 001B  
                       __activetblptr 000000                                _ADRESH 000FC4  
                              _ADRESL 000FC3                                _CCPR2L 000F90  
          __end_ofi2_startTMR0For1kHz 039C                                _T08BIT 007EAE  
                              _T1GCON 000FCC                                i2l1102 0156  
                              i2l1114 0184                                i2l1042 0076  
                              i2l1044 0078                                i2l1062 009A  
                              i2l1054 0086                                i2l1074 00CA  
                              i2l1084 00F2                                i2l1086 00F6  
                              i2l1088 00FA                            _OpenTimer1 0248  
                      __CFG_WDTEN$OFF 000000                                _TMR1IE 007CE8  
                              _TMR1IF 007CF0                                _TMR0ON 007EAF  
                              _TMR1ON 007E68                                _TMR2ON 007DD2  
                              _TRISC1 007CA1                                _TRISC6 007CA6  
                              _TRISC7 007CA7                                _TXREG1 000FAD  
                    _blocking_sensors 0028                        ??_initLedPorts 0015  
                        _RTT_received 0026                      __end_of_initUART 032A  
                    __end_of_initTMR0 03C0                      __end_of_initTMR1 03B6  
                    OpenTimer1@config 0017                                clear_0 028C  
                           ??_initPWM 0015                          __pdataCOMRAM 002C  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8                      __end_of_startADC 03E4  
                    __end_of_startPWM 03DC                        _no_RTT_counter 002A  
                           ??_stopPWM 0001                            __accesstop 0060  
             __end_of__initialization 02B2                       __CFG_PBADEN$OFF 000000  
                       ___rparam_used 000001           ??_interrupt_service_routine 0001  
                      __pcstackCOMRAM 0001                          ?_startTimer1 0001  
             __size_of_initOscillator 0012                    __size_of_initADCON 0036  
                         ?_OpenTimer1 0015                         ??_Write1USART 0015  
                     _putc_when_ready 039C                               _CCP2CON 000F97  
            __end_of_startTMR0For1kHz 038C                               _T2CKPS0 007DD0  
                             _T2CKPS1 007DD1             _interrupt_service_routine 0008  
                __end_of_initLedPorts 03CA                               i2u17_40 00AE  
                             i2u25_45 0112                               i2u18_48 00B0  
                             i2u28_40 0170                               i2u29_48 0172  
                           ?_initUART 0001                             ?_initTMR0 0001  
                           ?_initTMR1 0001                               __Hparam 0000  
                             __Lparam 0000                   __end_of_Write1USART 036A  
                           ?_startADC 0001                             ?_startPWM 0001  
                   __end_of_initADCON 02F2                               __pcinit 0286  
                             __ramtop 0800  interrupt_service_routine@sensor1_val 0013  
                 __size_of_OpenTimer1 003E                 _tmr0_overflow_counter 0020  
                             __ptext0 01C8                               __ptext1 037C  
                             __ptext2 02F2                               __ptext3 039C  
                             __ptext4 0358                               __ptext5 0312  
                             __ptext6 03AA                               __ptext7 0248  
                             __ptext8 03B6                               __ptext9 032A  
                   OpenTimer1@config1 0015                             _T1CONbits 000FCD  
                             _initPWM 032A                               _counter 001E  
                             _stopPWM 03D0                  end_of_initialization 02B2  
                          ??_initUART 0015                            ??_initTMR0 0015  
                          ??_initTMR1 0018                            _send_coord 02F2  
             __end_of_putc_when_ready 03AA                    i2_startTMR0For1kHz 038C  
                             postdec1 000FE5                               postinc0 000FEE  
                          ??_startADC 0001                            ??_startPWM 0001  
                 ?i2_startTMR0For1kHz 0001                  __size_of_startTimer1 0016  
                           _TRISAbits 000F92                             _TRISBbits 000F93  
                      _initOscillator 036A                      putc_when_ready@c 0016  
                ??i2_startTMR0For1kHz 0001                           _Write1USART 0358  
                          _stopTimer1 03CA                         __pidataCOMRAM 03DC  
               __size_of_initLedPorts 000A                      main@readyForUART 001D  
                 start_initialization 0286                __end_of_initOscillator 037C  
                        ??_OpenTimer1 0016    __size_of_interrupt_service_routine 01BC  
                         ?_send_coord 0017                      ?_putc_when_ready 0001  
                        _initLedPorts 03C0                         _notSentToUART 002D  
                   ?_startTMR0For1kHz 0001                    __end_of_OpenTimer1 0286  
                         __pbssCOMRAM 001E                    ??_startTMR0For1kHz 0015  
                     ?_initOscillator 0001                     _tmr1_counter_high 0022  
   __end_of_interrupt_service_routine 01C4                     __size_of_initUART 0018  
                   __size_of_initTMR0 000A                     __size_of_initTMR1 000C  
                         ?_stopTimer1 0001                             __pintcode 0008  
                   __size_of_startADC 0004                     __size_of_startPWM 0006  
                           _initADCON 02BC                   __size_of_send_coord 0020  
                            ?_initPWM 0001                              ?_stopPWM 0001  
                     Write1USART@data 0015                              _LATAbits 000F89  
                           _listening 0029                             _ping_send 002B  
                            _PIE1bits 000F9D                              _PIE3bits 000FA3  
                           _send_ping 002E                              _PIR1bits 000F9E  
                            _PIR3bits 000FA4                            _ADCON0bits 000FC2  
                          _ADCON1bits 000FC1                            _ADCON2bits 000FC0  
                          ?_initADCON 0001                   __size_of_stopTimer1 0006  
                           copy_data0 02A6                          ?_Write1USART 0001  
                            __Hrparam 0000                              __Lrparam 0000  
             main@f_tmr1_counter_high 001B                         ??_startTimer1 0001  
                          _ANSELBbits 000F5C                      _tmr1_counter_low 0024  
                    __size_of_initPWM 0018                              __ptext10 036A  
                            __ptext11 03C0                              __ptext12 02BC  
                          _T1GCONbits 000FCC                              __ptext14 038C  
                            __ptext15 03CA                              __ptext16 03D0  
                            __ptext17 0342                              __ptext18 03D6  
                            __ptext19 03E0                      __size_of_stopPWM 0006  
                            _initUART 0312                              _initTMR0 03B6  
                            _initTMR1 03AA           __size_ofi2_startTMR0For1kHz 0010  
                        ??_send_coord 001B                         __size_of_main 0080  
                            int$flags 0030                              _startADC 03E0  
                            _startPWM 03D6                      ??_initOscillator 0015  
                       _USART1_Status 0027                           ??_initADCON 0015  
                  __end_of_send_coord 0312                            _INTCONbits 000FF2  
                 __end_of_startTimer1 0358                              intlevel2 0000  
           __size_of_startTMR0For1kHz 0010                          ??_stopTimer1 0001  
                          _OSCCONbits 000FD3                           _sensor1_RTT 002F  
            __size_of_putc_when_ready 000E                    __end_of_stopTimer1 03D0  
                  __CFG_FOSC$INTOSCIO 000000            ?_interrupt_service_routine 0001  
                __size_of_Write1USART 0012  
