

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu May 12 16:14:18 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F24K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           	psect	idataCOMRAM
    29  0009F4                     __pidataCOMRAM:
    30                           	opt stack 0
    31                           
    32                           ;initializer for _adc_val1
    33  0009F4  0202               	dw	514
    34                           
    35                           ;initializer for _adc_val2
    36  0009F6  0202               	dw	514
    37                           
    38                           ;initializer for _read_adc
    39  0009F8  01                 	db	1
    40                           
    41                           ;initializer for _sensor1_turn
    42  0009F9  01                 	db	1
    43  0000                     _ANSELBbits	set	3932
    44  0000                     _ADCON0bits	set	4034
    45  0000                     _ADCON1bits	set	4033
    46  0000                     _ADCON2bits	set	4032
    47  0000                     _ADRESH	set	4036
    48  0000                     _ADRESL	set	4035
    49  0000                     _LATA	set	3977
    50  0000                     _LATAbits	set	3977
    51  0000                     _OSCCONbits	set	4051
    52  0000                     _PIE1bits	set	3997
    53  0000                     _PIR1bits	set	3998
    54  0000                     _PR2	set	4027
    55  0000                     _SPBRG	set	4015
    56  0000                     _T2CON	set	4026
    57  0000                     _T2CONbits	set	4026
    58  0000                     _TMR0H	set	4055
    59  0000                     _TMR0L	set	4054
    60  0000                     _TMR2	set	4028
    61  0000                     _TRISA	set	3986
    62  0000                     _TRISBbits	set	3987
    63  0000                     _TXREG1	set	4013
    64  0000                     _TXSTA1bits	set	4012
    65  0000                     _BRGH	set	32098
    66  0000                     _CREN	set	32092
    67  0000                     _GIEH	set	32663
    68  0000                     _LATC6	set	31838
    69  0000                     _LATC7	set	31839
    70  0000                     _PEIE	set	32662
    71  0000                     _PSA	set	32427
    72  0000                     _SPEN	set	32095
    73  0000                     _SYNC	set	32100
    74  0000                     _T08BIT	set	32430
    75  0000                     _T0CS	set	32429
    76  0000                     _T0SE	set	32428
    77  0000                     _TMR0IE	set	32661
    78  0000                     _TMR0IF	set	32658
    79  0000                     _TMR0ON	set	32431
    80  0000                     _TMR2IE	set	31977
    81  0000                     _TMR2IF	set	31985
    82  0000                     _TMR2ON	set	32210
    83  0000                     _TRISC6	set	31910
    84  0000                     _TRISC7	set	31911
    85  0000                     _TXEN	set	32101
    86                           
    87                           	psect	smallconst
    88  000800                     __psmallconst:
    89                           	opt stack 0
    90  000800  00                 	db	0
    91  000801                     STR_1:
    92  000801  50                 	db	80	;'P'
    93  000802  49                 	db	73	;'I'
    94  000803  4E                 	db	78	;'N'
    95  000804  47                 	db	71	;'G'
    96  000805  20                 	db	32
    97  000806  31                 	db	49	;'1'
    98  000807  00                 	db	0
    99  000808                     STR_2:
   100  000808  50                 	db	80	;'P'
   101  000809  49                 	db	73	;'I'
   102  00080A  4E                 	db	78	;'N'
   103  00080B  47                 	db	71	;'G'
   104  00080C  20                 	db	32
   105  00080D  32                 	db	50	;'2'
   106  00080E  00                 	db	0
   107                           
   108                           ; #config settings
   109  00080F  00                 	db	0	; dummy byte at the end
   110  0000                     
   111                           	psect	cinit
   112  00089A                     __pcinit:
   113                           	opt stack 0
   114  00089A                     start_initialization:
   115                           	opt stack 0
   116  00089A                     __initialization:
   117                           	opt stack 0
   118                           
   119                           ; Clear objects allocated to COMRAM (5 bytes)
   120  00089A  6A2B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   121  00089C  6A2A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   122  00089E  6A29               	clrf	(__pbssCOMRAM+2)& (0+255),c
   123  0008A0  6A28               	clrf	(__pbssCOMRAM+1)& (0+255),c
   124  0008A2  6A27               	clrf	__pbssCOMRAM& (0+255),c
   125                           
   126                           ; Initialize objects allocated to COMRAM (6 bytes)
   127                           ; load TBLPTR registers with __pidataCOMRAM
   128  0008A4  0EF4               	movlw	low __pidataCOMRAM
   129  0008A6  6EF6               	movwf	tblptrl,c
   130  0008A8  0E09               	movlw	high __pidataCOMRAM
   131  0008AA  6EF7               	movwf	tblptrh,c
   132  0008AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   133  0008AE  6EF8               	movwf	tblptru,c
   134  0008B0  EE00  F021         	lfsr	0,__pdataCOMRAM
   135  0008B4  EE10 F006          	lfsr	1,6
   136  0008B8                     copy_data0:
   137  0008B8  0009               	tblrd		*+
   138  0008BA  CFF5 FFEE          	movff	tablat,postinc0
   139  0008BE  50E5               	movf	postdec1,w,c
   140  0008C0  50E1               	movf	fsr1l,w,c
   141  0008C2  E1FA               	bnz	copy_data0
   142  0008C4                     end_of_initialization:
   143                           	opt stack 0
   144  0008C4                     __end_of__initialization:
   145                           	opt stack 0
   146  0008C4  902C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   147  0008C6  922C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   148  0008C8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   149  0008CA  6EF8               	movwf	tblptru,c
   150  0008CC  0E08               	movlw	high __Lsmallconst
   151  0008CE  6EF7               	movwf	tblptrh,c
   152  0008D0  0100               	movlb	0
   153  0008D2  EF08  F004         	goto	_main	;jump to C main() function
   154                           tblptru	equ	0xFF8
   155                           tblptrh	equ	0xFF7
   156                           tblptrl	equ	0xFF6
   157                           tablat	equ	0xFF5
   158                           postinc0	equ	0xFEE
   159                           postdec1	equ	0xFE5
   160                           fsr1l	equ	0xFE1
   161                           
   162                           	psect	bssCOMRAM
   163  000027                     __pbssCOMRAM:
   164                           	opt stack 0
   165  000027                     _counter:
   166                           	opt stack 0
   167  000027                     	ds	2
   168  000029                     _USART1_Status:
   169                           	opt stack 0
   170  000029                     	ds	1
   171  00002A                     _ping1:
   172                           	opt stack 0
   173  00002A                     	ds	1
   174  00002B                     _ping2:
   175                           	opt stack 0
   176  00002B                     	ds	1
   177                           tblptru	equ	0xFF8
   178                           tblptrh	equ	0xFF7
   179                           tblptrl	equ	0xFF6
   180                           tablat	equ	0xFF5
   181                           postinc0	equ	0xFEE
   182                           postdec1	equ	0xFE5
   183                           fsr1l	equ	0xFE1
   184                           
   185                           	psect	dataCOMRAM
   186  000021                     __pdataCOMRAM:
   187                           	opt stack 0
   188  000021                     _adc_val1:
   189                           	opt stack 0
   190  000021                     	ds	2
   191  000023                     _adc_val2:
   192                           	opt stack 0
   193  000023                     	ds	2
   194  000025                     _read_adc:
   195                           	opt stack 0
   196  000025                     	ds	1
   197  000026                     _sensor1_turn:
   198                           	opt stack 0
   199  000026                     	ds	1
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           postdec1	equ	0xFE5
   206                           fsr1l	equ	0xFE1
   207                           
   208                           	psect	cstackCOMRAM
   209  000001                     __pcstackCOMRAM:
   210                           	opt stack 0
   211  000001                     ??_interrupt_service_routine:
   212  000001                     
   213                           ; 1 bytes @ 0x0
   214  000001                     	ds	18
   215  000013                     OpenTimer2@config:
   216                           	opt stack 0
   217  000013                     Write1USART@data:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x12
   221  000013                     	ds	1
   222  000014                     putc_when_ready@c:
   223                           	opt stack 0
   224  000014                     puts1USART@data:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x13
   228  000014                     	ds	1
   229  000015                     send_coord@x_cm:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x14
   233  000015                     	ds	1
   234  000016                     send_debug@buffer:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x15
   238  000016                     	ds	1
   239  000017                     send_coord@y_cm:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x16
   243  000017                     	ds	1
   244  000018                     
   245                           ; 1 bytes @ 0x17
   246  000018                     	ds	1
   247  000019                     main@val1:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x18
   251  000019                     	ds	2
   252  00001B                     main@val2:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x1A
   256  00001B                     	ds	2
   257  00001D                     main@val3:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x1C
   261  00001D                     	ds	2
   262  00001F                     main@val4:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x1E
   266  00001F                     	ds	2
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           postdec1	equ	0xFE5
   273                           fsr1l	equ	0xFE1
   274                           
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 164 in file "main.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  val4            2   30[COMRAM] int 
   285 ;;  val3            2   28[COMRAM] int 
   286 ;;  val2            2   26[COMRAM] int 
   287 ;;  val1            2   24[COMRAM] int 
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   297 ;;      Params:         0       0       0       0       0       0       0       0       0
   298 ;;      Locals:         8       0       0       0       0       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0       0       0       0       0
   300 ;;      Totals:         8       0       0       0       0       0       0       0       0
   301 ;;Total ram usage:        8 bytes
   302 ;; Hardware stack levels required when called:    4
   303 ;; This function calls:
   304 ;;		_initADCON
   305 ;;		_initLed
   306 ;;		_initOscillator
   307 ;;		_initUART
   308 ;;		_send_coord
   309 ;;		_send_debug
   310 ;;		_startTMR2
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text0
   317  000810                     __ptext0:
   318                           	opt stack 0
   319  000810                     _main:
   320                           	opt stack 27
   321                           
   322                           ;main.c: 165: initOscillator();
   323                           
   324                           ;incstack = 0
   325  000810  ECDF  F004         	call	_initOscillator	;wreg free
   326                           
   327                           ;main.c: 166: initLed();
   328  000814  ECF5  F004         	call	_initLed	;wreg free
   329                           
   330                           ;main.c: 167: initADCON();
   331  000818  EC6B  F004         	call	_initADCON	;wreg free
   332                           
   333                           ;main.c: 168: initUART();
   334  00081C  ECCA  F004         	call	_initUART	;wreg free
   335                           
   336                           ;main.c: 169: startTMR2();
   337  000820  ECEF  F004         	call	_startTMR2	;wreg free
   338                           
   339                           ;main.c: 172: TMR0H = 0x00;
   340  000824  0E00               	movlw	0
   341  000826  6ED7               	movwf	4055,c	;volatile
   342                           
   343                           ;main.c: 173: TMR0L = 0x00;
   344  000828  0E00               	movlw	0
   345  00082A  6ED6               	movwf	4054,c	;volatile
   346                           
   347                           ;main.c: 174: T08BIT = 0;
   348  00082C  9CD5               	bcf	4053,6,c	;volatile
   349                           
   350                           ;main.c: 175: T0CS = 0;
   351  00082E  9AD5               	bcf	4053,5,c	;volatile
   352                           
   353                           ;main.c: 176: T0SE = 0;
   354  000830  98D5               	bcf	4053,4,c	;volatile
   355                           
   356                           ;main.c: 177: PSA = 1;
   357  000832  86D5               	bsf	4053,3,c	;volatile
   358                           
   359                           ;main.c: 178: TMR0ON = 0;
   360  000834  9ED5               	bcf	4053,7,c	;volatile
   361                           
   362                           ;main.c: 179: TMR0IE = 1;
   363  000836  8AF2               	bsf	intcon,5,c	;volatile
   364                           
   365                           ;main.c: 182: GIEH = 1;
   366  000838  8EF2               	bsf	intcon,7,c	;volatile
   367                           
   368                           ;main.c: 183: PEIE = 1;
   369  00083A  8CF2               	bsf	intcon,6,c	;volatile
   370  00083C                     l1115:
   371                           
   372                           ;main.c: 189: PIE1bits.ADIE = 0;
   373  00083C  9C9D               	bcf	3997,6,c	;volatile
   374                           
   375                           ;main.c: 190: int val1 = ping1;
   376  00083E  C02A  F019         	movff	_ping1,main@val1	;volatile
   377  000842  6A1A               	clrf	main@val1+1,c
   378                           
   379                           ;main.c: 191: int val2 = ping2;
   380  000844  C02B  F01B         	movff	_ping2,main@val2	;volatile
   381  000848  6A1C               	clrf	main@val2+1,c
   382                           
   383                           ;main.c: 192: int val3 = adc_val1;
   384  00084A  C021  F01D         	movff	_adc_val1,main@val3	;volatile
   385  00084E  C022  F01E         	movff	_adc_val1+1,main@val3+1	;volatile
   386                           
   387                           ;main.c: 193: int val4 = adc_val2;
   388  000852  C023  F01F         	movff	_adc_val2,main@val4	;volatile
   389  000856  C024  F020         	movff	_adc_val2+1,main@val4+1	;volatile
   390                           
   391                           ;main.c: 194: PIE1bits.ADIE = 1;
   392  00085A  8C9D               	bsf	3997,6,c	;volatile
   393                           
   394                           ;main.c: 196: if (val1) {
   395  00085C  5019               	movf	main@val1,w,c
   396  00085E  101A               	iorwf	main@val1+1,w,c
   397  000860  B4D8               	btfsc	status,2,c
   398  000862  D006               	goto	l1131
   399                           
   400                           ;main.c: 197: send_debug("PING 1");
   401  000864  0E01               	movlw	low STR_1
   402  000866  6E16               	movwf	send_debug@buffer,c
   403  000868  0E08               	movlw	high STR_1
   404  00086A  6E17               	movwf	send_debug@buffer+1,c
   405  00086C  ECBD  F004         	call	_send_debug	;wreg free
   406  000870                     l1131:
   407                           
   408                           ;main.c: 198: }
   409                           ;main.c: 199: if (val2) {
   410  000870  501B               	movf	main@val2,w,c
   411  000872  101C               	iorwf	main@val2+1,w,c
   412  000874  B4D8               	btfsc	status,2,c
   413  000876  D006               	goto	l1135
   414                           
   415                           ;main.c: 200: send_debug("PING 2");
   416  000878  0E08               	movlw	low STR_2
   417  00087A  6E16               	movwf	send_debug@buffer,c
   418  00087C  0E08               	movlw	high STR_2
   419  00087E  6E17               	movwf	send_debug@buffer+1,c
   420  000880  ECBD  F004         	call	_send_debug	;wreg free
   421  000884                     l1135:
   422                           
   423                           ;main.c: 201: }
   424                           ;main.c: 203: send_coord(val3,val4);
   425  000884  C01D  F015         	movff	main@val3,send_coord@x_cm
   426  000888  C01E  F016         	movff	main@val3+1,send_coord@x_cm+1
   427  00088C  C01F  F017         	movff	main@val4,send_coord@y_cm
   428  000890  C020  F018         	movff	main@val4+1,send_coord@y_cm+1
   429  000894  EC9F  F004         	call	_send_coord	;wreg free
   430  000898  D7D1               	goto	l1115
   431  00089A                     __end_of_main:
   432                           	opt stack 0
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           intcon	equ	0xFF2
   438                           postinc0	equ	0xFEE
   439                           postdec1	equ	0xFE5
   440                           fsr1l	equ	0xFE1
   441                           status	equ	0xFD8
   442                           
   443 ;; *************** function _startTMR2 *****************
   444 ;; Defined at:
   445 ;;		line 155 in file "main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   459 ;;      Params:         0       0       0       0       0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0       0       0
   462 ;;      Totals:         0       0       0       0       0       0       0       0       0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; Hardware stack levels required when called:    2
   466 ;; This function calls:
   467 ;;		_OpenTimer2
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text1
   474  0009DE                     __ptext1:
   475                           	opt stack 0
   476  0009DE                     _startTMR2:
   477                           	opt stack 28
   478                           
   479                           ;main.c: 158: PR2 = 191;
   480                           
   481                           ;incstack = 0
   482  0009DE  0EBF               	movlw	191
   483  0009E0  6EBB               	movwf	4027,c	;volatile
   484                           
   485                           ;main.c: 159: OpenTimer2(0b11111111
   486                           ;main.c: 160: & 0b11111100
   487                           ;main.c: 161: & 0b10000111);
   488  0009E2  0E84               	movlw	132
   489  0009E4  ECAF  F004         	call	_OpenTimer2
   490  0009E8  0012               	return		;funcret
   491  0009EA                     __end_of_startTMR2:
   492                           	opt stack 0
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           intcon	equ	0xFF2
   498                           postinc0	equ	0xFEE
   499                           postdec1	equ	0xFE5
   500                           fsr1l	equ	0xFE1
   501                           status	equ	0xFD8
   502                           
   503 ;; *************** function _OpenTimer2 *****************
   504 ;; Defined at:
   505 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\plib\Timers\t2open.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  config          1    wreg     unsigned char 
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  config          1   18[COMRAM] unsigned char 
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   519 ;;      Params:         0       0       0       0       0       0       0       0       0
   520 ;;      Locals:         1       0       0       0       0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0       0       0
   522 ;;      Totals:         1       0       0       0       0       0       0       0       0
   523 ;;Total ram usage:        1 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; Hardware stack levels required when called:    1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_startTMR2
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text2
   534  00095E                     __ptext2:
   535                           	opt stack 0
   536  00095E                     _OpenTimer2:
   537                           	opt stack 28
   538                           
   539                           ;incstack = 0
   540                           ;OpenTimer2@config stored from wreg
   541  00095E  6E13               	movwf	OpenTimer2@config,c
   542  000960  5013               	movf	OpenTimer2@config,w,c
   543  000962  0BFB               	andlw	251
   544  000964  6EBA               	movwf	4026,c	;volatile
   545  000966  0E00               	movlw	0
   546  000968  6EBC               	movwf	4028,c	;volatile
   547  00096A  929E               	bcf	3998,1,c	;volatile
   548  00096C  AE13               	btfss	OpenTimer2@config,7,c
   549  00096E  D002               	goto	l206
   550  000970  829D               	bsf	3997,1,c	;volatile
   551  000972  D001               	goto	l207
   552  000974                     l206:
   553  000974  929D               	bcf	3997,1,c	;volatile
   554  000976                     l207:
   555  000976  84BA               	bsf	4026,2,c	;volatile
   556  000978  0012               	return		;funcret
   557  00097A                     __end_of_OpenTimer2:
   558                           	opt stack 0
   559                           tblptru	equ	0xFF8
   560                           tblptrh	equ	0xFF7
   561                           tblptrl	equ	0xFF6
   562                           tablat	equ	0xFF5
   563                           intcon	equ	0xFF2
   564                           postinc0	equ	0xFEE
   565                           postdec1	equ	0xFE5
   566                           fsr1l	equ	0xFE1
   567                           status	equ	0xFD8
   568                           
   569 ;; *************** function _send_debug *****************
   570 ;; Defined at:
   571 ;;		line 44 in file "protocol.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;  buffer          2   21[COMRAM] PTR const unsigned char 
   574 ;;		 -> STR_2(7), STR_1(7), 
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   586 ;;      Params:         2       0       0       0       0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0       0       0
   589 ;;      Totals:         2       0       0       0       0       0       0       0       0
   590 ;;Total ram usage:        2 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; Hardware stack levels required when called:    3
   593 ;; This function calls:
   594 ;;		_putc_when_ready
   595 ;;		_puts1USART
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text3
   602  00097A                     __ptext3:
   603                           	opt stack 0
   604  00097A                     _send_debug:
   605                           	opt stack 27
   606                           
   607                           ;protocol.c: 45: putc_when_ready(0x02);
   608                           
   609                           ;incstack = 0
   610  00097A  0E02               	movlw	2
   611  00097C  ECE8  F004         	call	_putc_when_ready
   612                           
   613                           ;protocol.c: 46: puts1USART(buffer);
   614  000980  C016  F014         	movff	send_debug@buffer,puts1USART@data
   615  000984  C017  F015         	movff	send_debug@buffer+1,puts1USART@data+1
   616  000988  EC89  F004         	call	_puts1USART	;wreg free
   617                           
   618                           ;protocol.c: 47: putc_when_ready(0x03);
   619  00098C  0E03               	movlw	3
   620  00098E  ECE8  F004         	call	_putc_when_ready
   621  000992  0012               	return		;funcret
   622  000994                     __end_of_send_debug:
   623                           	opt stack 0
   624                           tblptru	equ	0xFF8
   625                           tblptrh	equ	0xFF7
   626                           tblptrl	equ	0xFF6
   627                           tablat	equ	0xFF5
   628                           intcon	equ	0xFF2
   629                           postinc0	equ	0xFEE
   630                           postdec1	equ	0xFE5
   631                           fsr1l	equ	0xFE1
   632                           status	equ	0xFD8
   633                           
   634 ;; *************** function _puts1USART *****************
   635 ;; Defined at:
   636 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\plib\USART\u1puts.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  data            2   19[COMRAM] PTR unsigned char 
   639 ;;		 -> STR_2(7), STR_1(7), 
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   651 ;;      Params:         2       0       0       0       0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0
   654 ;;      Totals:         2       0       0       0       0       0       0       0       0
   655 ;;Total ram usage:        2 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    2
   658 ;; This function calls:
   659 ;;		_Write1USART
   660 ;; This function is called by:
   661 ;;		_send_debug
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           	psect	text4
   666  000912                     __ptext4:
   667                           	opt stack 0
   668  000912                     _puts1USART:
   669                           	opt stack 27
   670  000912                     l216:
   671  000912  A2AC               	btfss	4012,1,c	;volatile
   672  000914  D7FE               	goto	l216
   673  000916  C014  FFF6         	movff	puts1USART@data,tblptrl
   674  00091A  C015  FFF7         	movff	puts1USART@data+1,tblptrh
   675  00091E                     	if	0	;tblptru may be non-zero
   676  00091E                     	endif
   677  00091E                     	if	0	;tblptru may be non-zero
   678  00091E                     	endif
   679  00091E  0008               	tblrd		*
   680  000920  50F5               	movf	tablat,w,c
   681  000922  ECD6  F004         	call	_Write1USART
   682  000926  C014  FFF6         	movff	puts1USART@data,tblptrl
   683  00092A  C015  FFF7         	movff	puts1USART@data+1,tblptrh
   684  00092E  4A14               	infsnz	puts1USART@data,f,c
   685  000930  2A15               	incf	puts1USART@data+1,f,c
   686  000932                     	if	0	;tblptru may be non-zero
   687  000932                     	endif
   688  000932                     	if	0	;tblptru may be non-zero
   689  000932                     	endif
   690  000932  0008               	tblrd		*
   691  000934  50F5               	movf	tablat,w,c
   692  000936  0900               	iorlw	0
   693  000938  B4D8               	btfsc	status,2,c
   694  00093A  0012               	return	
   695  00093C  D7EA               	goto	l216
   696  00093E                     __end_of_puts1USART:
   697                           	opt stack 0
   698                           tblptru	equ	0xFF8
   699                           tblptrh	equ	0xFF7
   700                           tblptrl	equ	0xFF6
   701                           tablat	equ	0xFF5
   702                           intcon	equ	0xFF2
   703                           postinc0	equ	0xFEE
   704                           postdec1	equ	0xFE5
   705                           fsr1l	equ	0xFE1
   706                           status	equ	0xFD8
   707                           
   708 ;; *************** function _send_coord *****************
   709 ;; Defined at:
   710 ;;		line 25 in file "protocol.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  x_cm            2   20[COMRAM] unsigned int 
   713 ;;  y_cm            2   22[COMRAM] unsigned int 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   725 ;;      Params:         4       0       0       0       0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0       0       0
   728 ;;      Totals:         4       0       0       0       0       0       0       0       0
   729 ;;Total ram usage:        4 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    3
   732 ;; This function calls:
   733 ;;		_putc_when_ready
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text5
   740  00093E                     __ptext5:
   741                           	opt stack 0
   742  00093E                     _send_coord:
   743                           	opt stack 27
   744                           
   745                           ;protocol.c: 26: putc_when_ready(0x16);
   746                           
   747                           ;incstack = 0
   748  00093E  0E16               	movlw	22
   749  000940  ECE8  F004         	call	_putc_when_ready
   750                           
   751                           ;protocol.c: 27: putc_when_ready((x_cm >> 8) & 0xFF);
   752  000944  5016               	movf	send_coord@x_cm+1,w,c
   753  000946  ECE8  F004         	call	_putc_when_ready
   754                           
   755                           ;protocol.c: 28: putc_when_ready((x_cm) & 0xFF);
   756  00094A  5015               	movf	send_coord@x_cm,w,c
   757  00094C  ECE8  F004         	call	_putc_when_ready
   758                           
   759                           ;protocol.c: 29: putc_when_ready((y_cm >> 8) & 0xFF);
   760  000950  5018               	movf	send_coord@y_cm+1,w,c
   761  000952  ECE8  F004         	call	_putc_when_ready
   762                           
   763                           ;protocol.c: 30: putc_when_ready((y_cm) & 0XFF);
   764  000956  5017               	movf	send_coord@y_cm,w,c
   765  000958  ECE8  F004         	call	_putc_when_ready
   766  00095C  0012               	return		;funcret
   767  00095E                     __end_of_send_coord:
   768                           	opt stack 0
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           intcon	equ	0xFF2
   774                           postinc0	equ	0xFEE
   775                           postdec1	equ	0xFE5
   776                           fsr1l	equ	0xFE1
   777                           status	equ	0xFD8
   778                           
   779 ;; *************** function _putc_when_ready *****************
   780 ;; Defined at:
   781 ;;		line 20 in file "protocol.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  c               1    wreg     unsigned char 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  c               1   19[COMRAM] unsigned char 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   795 ;;      Params:         0       0       0       0       0       0       0       0       0
   796 ;;      Locals:         1       0       0       0       0       0       0       0       0
   797 ;;      Temps:          0       0       0       0       0       0       0       0       0
   798 ;;      Totals:         1       0       0       0       0       0       0       0       0
   799 ;;Total ram usage:        1 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    2
   802 ;; This function calls:
   803 ;;		_Write1USART
   804 ;; This function is called by:
   805 ;;		_send_coord
   806 ;;		_send_debug
   807 ;;		_send_debug_nchar
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text6
   812  0009D0                     __ptext6:
   813                           	opt stack 0
   814  0009D0                     _putc_when_ready:
   815                           	opt stack 27
   816                           
   817                           ;incstack = 0
   818                           ;putc_when_ready@c stored from wreg
   819  0009D0  6E14               	movwf	putc_when_ready@c,c
   820  0009D2                     l174:
   821  0009D2  A2AC               	btfss	4012,1,c	;volatile
   822  0009D4  D7FE               	goto	l174
   823                           
   824                           ;protocol.c: 22: Write1USART(c);
   825  0009D6  5014               	movf	putc_when_ready@c,w,c
   826  0009D8  ECD6  F004         	call	_Write1USART
   827  0009DC  0012               	return		;funcret
   828  0009DE                     __end_of_putc_when_ready:
   829                           	opt stack 0
   830                           tblptru	equ	0xFF8
   831                           tblptrh	equ	0xFF7
   832                           tblptrl	equ	0xFF6
   833                           tablat	equ	0xFF5
   834                           intcon	equ	0xFF2
   835                           postinc0	equ	0xFEE
   836                           postdec1	equ	0xFE5
   837                           fsr1l	equ	0xFE1
   838                           status	equ	0xFD8
   839                           
   840 ;; *************** function _Write1USART *****************
   841 ;; Defined at:
   842 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\plib\USART\u1write.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  data            1    wreg     unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  data            1   18[COMRAM] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   856 ;;      Params:         0       0       0       0       0       0       0       0       0
   857 ;;      Locals:         1       0       0       0       0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0
   859 ;;      Totals:         1       0       0       0       0       0       0       0       0
   860 ;;Total ram usage:        1 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    1
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_putc_when_ready
   867 ;;		_puts1USART
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text7
   872  0009AC                     __ptext7:
   873                           	opt stack 0
   874  0009AC                     _Write1USART:
   875                           	opt stack 27
   876                           
   877                           ;incstack = 0
   878                           ;Write1USART@data stored from wreg
   879  0009AC  6E13               	movwf	Write1USART@data,c
   880  0009AE  ACAC               	btfss	4012,6,c	;volatile
   881  0009B0  D003               	goto	l853
   882  0009B2  90AC               	bcf	4012,0,c	;volatile
   883  0009B4  B229               	btfsc	_USART1_Status,1,c
   884  0009B6  80AC               	bsf	4012,0,c	;volatile
   885  0009B8                     l853:
   886  0009B8  C013  FFAD         	movff	Write1USART@data,4013	;volatile
   887  0009BC  0012               	return		;funcret
   888  0009BE                     __end_of_Write1USART:
   889                           	opt stack 0
   890                           tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           tblptrl	equ	0xFF6
   893                           tablat	equ	0xFF5
   894                           intcon	equ	0xFF2
   895                           postinc0	equ	0xFEE
   896                           postdec1	equ	0xFE5
   897                           fsr1l	equ	0xFE1
   898                           status	equ	0xFD8
   899                           
   900 ;; *************** function _initUART *****************
   901 ;; Defined at:
   902 ;;		line 50 in file "protocol.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, status,2
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   916 ;;      Params:         0       0       0       0       0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0       0       0       0       0
   919 ;;      Totals:         0       0       0       0       0       0       0       0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    1
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text8
   931  000994                     __ptext8:
   932                           	opt stack 0
   933  000994                     _initUART:
   934                           	opt stack 29
   935                           
   936                           ;protocol.c: 51: BRGH = 0;
   937                           
   938                           ;incstack = 0
   939  000994  94AC               	bcf	4012,2,c	;volatile
   940                           
   941                           ;protocol.c: 52: SPBRG = 25;
   942  000996  0E19               	movlw	25
   943  000998  6EAF               	movwf	4015,c	;volatile
   944                           
   945                           ;protocol.c: 53: SYNC = 0;
   946  00099A  98AC               	bcf	4012,4,c	;volatile
   947                           
   948                           ;protocol.c: 54: SPEN = 1;
   949  00099C  8EAB               	bsf	4011,7,c	;volatile
   950                           
   951                           ;protocol.c: 55: TRISC7 = 1;
   952  00099E  8E94               	bsf	3988,7,c	;volatile
   953                           
   954                           ;protocol.c: 56: TRISC6 = 1;
   955  0009A0  8C94               	bsf	3988,6,c	;volatile
   956                           
   957                           ;protocol.c: 57: LATC6 = 0;
   958  0009A2  9C8B               	bcf	3979,6,c	;volatile
   959                           
   960                           ;protocol.c: 58: LATC7 = 0;
   961  0009A4  9E8B               	bcf	3979,7,c	;volatile
   962                           
   963                           ;protocol.c: 59: CREN = 1;
   964  0009A6  88AB               	bsf	4011,4,c	;volatile
   965                           
   966                           ;protocol.c: 60: TXEN = 1;
   967  0009A8  8AAC               	bsf	4012,5,c	;volatile
   968  0009AA  0012               	return		;funcret
   969  0009AC                     __end_of_initUART:
   970                           	opt stack 0
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           intcon	equ	0xFF2
   976                           postinc0	equ	0xFEE
   977                           postdec1	equ	0xFE5
   978                           fsr1l	equ	0xFE1
   979                           status	equ	0xFD8
   980                           
   981 ;; *************** function _initOscillator *****************
   982 ;; Defined at:
   983 ;;		line 147 in file "main.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   997 ;;      Params:         0       0       0       0       0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:    1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text9
  1012  0009BE                     __ptext9:
  1013                           	opt stack 0
  1014  0009BE                     _initOscillator:
  1015                           	opt stack 29
  1016                           
  1017                           ;main.c: 148: OSCCONbits.IDLEN = 1;
  1018                           
  1019                           ;incstack = 0
  1020  0009BE  8ED3               	bsf	4051,7,c	;volatile
  1021                           
  1022                           ;main.c: 149: OSCCONbits.IRCF = 0b111;
  1023  0009C0  88D3               	bsf	4051,4,c	;volatile
  1024  0009C2  8AD3               	bsf	4051,5,c	;volatile
  1025  0009C4  8CD3               	bsf	4051,6,c	;volatile
  1026                           
  1027                           ;main.c: 150: OSCCONbits.OSTS = 0;
  1028  0009C6  96D3               	bcf	4051,3,c	;volatile
  1029                           
  1030                           ;main.c: 151: OSCCONbits.HFIOFS = 0;
  1031  0009C8  94D3               	bcf	4051,2,c	;volatile
  1032                           
  1033                           ;main.c: 152: OSCCONbits.SCS = 0b00;
  1034  0009CA  0EFC               	movlw	-4
  1035  0009CC  16D3               	andwf	4051,f,c	;volatile
  1036  0009CE  0012               	return		;funcret
  1037  0009D0                     __end_of_initOscillator:
  1038                           	opt stack 0
  1039                           tblptru	equ	0xFF8
  1040                           tblptrh	equ	0xFF7
  1041                           tblptrl	equ	0xFF6
  1042                           tablat	equ	0xFF5
  1043                           intcon	equ	0xFF2
  1044                           postinc0	equ	0xFEE
  1045                           postdec1	equ	0xFE5
  1046                           fsr1l	equ	0xFE1
  1047                           status	equ	0xFD8
  1048                           
  1049 ;; *************** function _initLed *****************
  1050 ;; Defined at:
  1051 ;;		line 139 in file "main.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1065 ;;      Params:         0       0       0       0       0       0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1068 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1069 ;;Total ram usage:        0 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text10
  1080  0009EA                     __ptext10:
  1081                           	opt stack 0
  1082  0009EA                     _initLed:
  1083                           	opt stack 29
  1084                           
  1085                           ;main.c: 140: TRISA = 0;
  1086                           
  1087                           ;incstack = 0
  1088  0009EA  0E00               	movlw	0
  1089  0009EC  6E92               	movwf	3986,c	;volatile
  1090                           
  1091                           ;main.c: 141: LATA = 0;
  1092  0009EE  0E00               	movlw	0
  1093  0009F0  6E89               	movwf	3977,c	;volatile
  1094  0009F2  0012               	return		;funcret
  1095  0009F4                     __end_of_initLed:
  1096                           	opt stack 0
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           intcon	equ	0xFF2
  1102                           postinc0	equ	0xFEE
  1103                           postdec1	equ	0xFE5
  1104                           fsr1l	equ	0xFE1
  1105                           status	equ	0xFD8
  1106                           
  1107 ;; *************** function _initADCON *****************
  1108 ;; Defined at:
  1109 ;;		line 114 in file "main.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1123 ;;      Params:         0       0       0       0       0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text11
  1138  0008D6                     __ptext11:
  1139                           	opt stack 0
  1140  0008D6                     _initADCON:
  1141                           	opt stack 29
  1142                           
  1143                           ;main.c: 116: ADCON0bits.ADON = 1;
  1144                           
  1145                           ;incstack = 0
  1146  0008D6  80C2               	bsf	4034,0,c	;volatile
  1147                           
  1148                           ;main.c: 117: ADCON0bits.GO_nDONE = 0;
  1149  0008D8  92C2               	bcf	4034,1,c	;volatile
  1150                           
  1151                           ;main.c: 118: ADCON0bits.CHS = 0b01001;
  1152  0008DA  84C2               	bsf	4034,2,c	;volatile
  1153  0008DC  96C2               	bcf	4034,3,c	;volatile
  1154  0008DE  98C2               	bcf	4034,4,c	;volatile
  1155  0008E0  8AC2               	bsf	4034,5,c	;volatile
  1156  0008E2  9CC2               	bcf	4034,6,c	;volatile
  1157                           
  1158                           ;main.c: 119: ANSELBbits.ANSB3 = 1;
  1159  0008E4  010F               	movlb	15	; () banked
  1160  0008E6  875C               	bsf	92,3,b	;volatile
  1161                           
  1162                           ;main.c: 120: TRISBbits.TRISB3 = 1;
  1163  0008E8  8693               	bsf	3987,3,c	;volatile
  1164                           
  1165                           ;main.c: 121: ANSELBbits.ANSB4 = 1;
  1166  0008EA  010F               	movlb	15	; () banked
  1167  0008EC  895C               	bsf	92,4,b	;volatile
  1168                           
  1169                           ;main.c: 122: TRISBbits.TRISB4 = 1;
  1170  0008EE  8893               	bsf	3987,4,c	;volatile
  1171                           
  1172                           ;main.c: 124: ADCON1bits.TRIGSEL = 0;
  1173  0008F0  9EC1               	bcf	4033,7,c	;volatile
  1174                           
  1175                           ; BSR set to: 15
  1176                           ;main.c: 125: ADCON1bits.PVCFG = 0;
  1177  0008F2  0EF3               	movlw	-13
  1178  0008F4  16C1               	andwf	4033,f,c	;volatile
  1179                           
  1180                           ;main.c: 126: ADCON1bits.NVCFG = 0;
  1181  0008F6  0EFC               	movlw	-4
  1182  0008F8  16C1               	andwf	4033,f,c	;volatile
  1183                           
  1184                           ; BSR set to: 15
  1185                           ;main.c: 128: ADCON2bits.ADFM = 0;
  1186  0008FA  9EC0               	bcf	4032,7,c	;volatile
  1187                           
  1188                           ;main.c: 129: ADCON2bits.ACQT = 0b100;
  1189  0008FC  50C0               	movf	4032,w,c	;volatile
  1190  0008FE  0BC7               	andlw	-57
  1191  000900  0920               	iorlw	32
  1192  000902  6EC0               	movwf	4032,c	;volatile
  1193                           
  1194                           ;main.c: 130: ADCON2bits.ADCS = 0b101;
  1195  000904  50C0               	movf	4032,w,c	;volatile
  1196  000906  0BF8               	andlw	-8
  1197  000908  0905               	iorlw	5
  1198  00090A  6EC0               	movwf	4032,c	;volatile
  1199                           
  1200                           ; BSR set to: 15
  1201                           ;main.c: 132: PIR1bits.ADIF = 0;
  1202  00090C  9C9E               	bcf	3998,6,c	;volatile
  1203                           
  1204                           ; BSR set to: 15
  1205                           ;main.c: 133: PIE1bits.ADIE = 1;
  1206  00090E  8C9D               	bsf	3997,6,c	;volatile
  1207                           
  1208                           ; BSR set to: 15
  1209  000910  0012               	return		;funcret
  1210  000912                     __end_of_initADCON:
  1211                           	opt stack 0
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           intcon	equ	0xFF2
  1217                           postinc0	equ	0xFEE
  1218                           postdec1	equ	0xFE5
  1219                           fsr1l	equ	0xFE1
  1220                           status	equ	0xFD8
  1221                           
  1222 ;; *************** function _interrupt_service_routine *****************
  1223 ;; Defined at:
  1224 ;;		line 51 in file "main.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1238 ;;      Params:         0       0       0       0       0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1240 ;;      Temps:         18       0       0       0       0       0       0       0       0
  1241 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1242 ;;Total ram usage:       18 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		Interrupt level 2
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	intcode
  1252  000008                     __pintcode:
  1253                           	opt stack 0
  1254  000008                     _interrupt_service_routine:
  1255                           	opt stack 27
  1256                           
  1257                           ; BSR set to: 15
  1258                           ;incstack = 0
  1259  000008  822C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1260  00000A  CFFA F005          	movff	pclath,??_interrupt_service_routine+4
  1261  00000E  CFFB F006          	movff	pclatu,??_interrupt_service_routine+5
  1262  000012  CFE9 F007          	movff	fsr0l,??_interrupt_service_routine+6
  1263  000016  CFEA F008          	movff	fsr0h,??_interrupt_service_routine+7
  1264  00001A  CFE1 F009          	movff	fsr1l,??_interrupt_service_routine+8
  1265  00001E  CFE2 F00A          	movff	fsr1h,??_interrupt_service_routine+9
  1266  000022  CFD9 F00B          	movff	fsr2l,??_interrupt_service_routine+10
  1267  000026  CFDA F00C          	movff	fsr2h,??_interrupt_service_routine+11
  1268  00002A  CFF3 F00D          	movff	prodl,??_interrupt_service_routine+12
  1269  00002E  CFF4 F00E          	movff	prodh,??_interrupt_service_routine+13
  1270  000032  CFF6 F00F          	movff	tblptrl,??_interrupt_service_routine+14
  1271  000036  CFF7 F010          	movff	tblptrh,??_interrupt_service_routine+15
  1272  00003A  CFF8 F011          	movff	tblptru,??_interrupt_service_routine+16
  1273  00003E  CFF5 F012          	movff	tablat,??_interrupt_service_routine+17
  1274                           
  1275                           ;main.c: 53: if (TMR0IE == 1 && TMR0IF == 1) {
  1276  000042  BAF2               	btfsc	intcon,5,c	;volatile
  1277  000044  A4F2               	btfss	intcon,2,c	;volatile
  1278  000046  D021               	goto	i2l979
  1279                           
  1280                           ;main.c: 54: ++counter;
  1281  000048  4A27               	infsnz	_counter,f,c	;volatile
  1282  00004A  2A28               	incf	_counter+1,f,c	;volatile
  1283                           
  1284                           ;main.c: 55: if (counter == 200) {
  1285  00004C  0EC8               	movlw	200
  1286  00004E  1827               	xorwf	_counter,w,c	;volatile
  1287  000050  1028               	iorwf	_counter+1,w,c	;volatile
  1288  000052  A4D8               	btfss	status,2,c
  1289  000054  D019               	goto	i2l977
  1290                           
  1291                           ;main.c: 56: LATAbits.LATA2 = !LATAbits.LATA2;
  1292  000056  B489               	btfsc	3977,2,c	;volatile
  1293  000058  D003               	goto	i2u13_40
  1294  00005A  6A01               	clrf	??_interrupt_service_routine& (0+255),c
  1295  00005C  2A01               	incf	??_interrupt_service_routine& (0+255),f,c
  1296  00005E  D001               	goto	i2u14_48
  1297  000060                     i2u13_40:
  1298  000060  6A01               	clrf	??_interrupt_service_routine& (0+255),c
  1299  000062                     i2u14_48:
  1300  000062  4601               	rlncf	??_interrupt_service_routine,f,c
  1301  000064  4601               	rlncf	??_interrupt_service_routine,f,c
  1302  000066  5089               	movf	3977,w,c	;volatile
  1303  000068  1801               	xorwf	??_interrupt_service_routine,w,c
  1304  00006A  0BFB               	andlw	-5
  1305  00006C  1801               	xorwf	??_interrupt_service_routine,w,c
  1306  00006E  6E89               	movwf	3977,c	;volatile
  1307                           
  1308                           ;main.c: 57: counter = 0;
  1309  000070  0E00               	movlw	0
  1310  000072  6E28               	movwf	_counter+1,c	;volatile
  1311  000074  0E00               	movlw	0
  1312  000076  6E27               	movwf	_counter,c	;volatile
  1313                           
  1314                           ;main.c: 58: TMR0ON = 0;
  1315  000078  9ED5               	bcf	4053,7,c	;volatile
  1316                           
  1317                           ;main.c: 59: TMR2ON = 1;
  1318  00007A  84BA               	bsf	4026,2,c	;volatile
  1319                           
  1320                           ;main.c: 60: LATAbits.LATA0 = 0;
  1321  00007C  9089               	bcf	3977,0,c	;volatile
  1322                           
  1323                           ;main.c: 61: LATAbits.LATA1 = 0;
  1324  00007E  9289               	bcf	3977,1,c	;volatile
  1325                           
  1326                           ;main.c: 62: ping1 = 0;
  1327  000080  0E00               	movlw	0
  1328  000082  6E2A               	movwf	_ping1,c	;volatile
  1329                           
  1330                           ;main.c: 63: ping2 = 0;
  1331  000084  0E00               	movlw	0
  1332  000086  6E2B               	movwf	_ping2,c	;volatile
  1333  000088                     i2l977:
  1334                           
  1335                           ;main.c: 65: }
  1336                           ;main.c: 66: TMR0IF = 0;
  1337  000088  94F2               	bcf	intcon,2,c	;volatile
  1338  00008A                     i2l979:
  1339                           
  1340                           ;main.c: 67: }
  1341                           ;main.c: 70: if (TMR2IE && TMR2IF) {
  1342  00008A  B29D               	btfsc	3997,1,c	;volatile
  1343  00008C  A29E               	btfss	3998,1,c	;volatile
  1344  00008E  D002               	goto	i2l110
  1345                           
  1346                           ;main.c: 71: TMR2IF = 0;
  1347  000090  929E               	bcf	3998,1,c	;volatile
  1348                           
  1349                           ;main.c: 72: ADCON0bits.GO = 1;
  1350  000092  82C2               	bsf	4034,1,c	;volatile
  1351  000094                     i2l110:
  1352                           
  1353                           ;main.c: 73: }
  1354                           ;main.c: 76: if (PIE1bits.ADIE && PIR1bits.ADIF) {
  1355  000094  BC9D               	btfsc	3997,6,c	;volatile
  1356  000096  AC9E               	btfss	3998,6,c	;volatile
  1357  000098  D06A               	goto	i2l120
  1358                           
  1359                           ;main.c: 77: PIR1bits.ADIF = 0;
  1360  00009A  9C9E               	bcf	3998,6,c	;volatile
  1361                           
  1362                           ;main.c: 78: if (sensor1_turn) {
  1363  00009C  5026               	movf	_sensor1_turn,w,c	;volatile
  1364  00009E  B4D8               	btfsc	status,2,c
  1365  0000A0  D034               	goto	i2l1005
  1366                           
  1367                           ;main.c: 79: adc_val1 = (ADRESH << 2) | (ADRESL >> 6);
  1368  0000A2  CFC3 F001          	movff	4035,??_interrupt_service_routine	;volatile
  1369  0000A6  0E06               	movlw	6
  1370  0000A8  6E02               	movwf	(??_interrupt_service_routine+1)& (0+255),c
  1371  0000AA                     i2u20_45:
  1372  0000AA  90D8               	bcf	status,0,c
  1373  0000AC  3201               	rrcf	??_interrupt_service_routine,f,c
  1374  0000AE  2E02               	decfsz	(??_interrupt_service_routine+1)& (0+255),f,c
  1375  0000B0  D7FC               	goto	i2u20_45
  1376  0000B2  5001               	movf	??_interrupt_service_routine,w,c
  1377  0000B4  CFC4 F003          	movff	4036,??_interrupt_service_routine+2	;volatile
  1378  0000B8  6A04               	clrf	(??_interrupt_service_routine+3)& (0+255),c
  1379  0000BA  90D8               	bcf	status,0,c
  1380  0000BC  3603               	rlcf	??_interrupt_service_routine+2,f,c
  1381  0000BE  3604               	rlcf	??_interrupt_service_routine+3,f,c
  1382  0000C0  90D8               	bcf	status,0,c
  1383  0000C2  3603               	rlcf	??_interrupt_service_routine+2,f,c
  1384  0000C4  3604               	rlcf	??_interrupt_service_routine+3,f,c
  1385  0000C6  1003               	iorwf	??_interrupt_service_routine+2,w,c
  1386  0000C8  6E21               	movwf	_adc_val1,c	;volatile
  1387  0000CA  5004               	movf	??_interrupt_service_routine+3,w,c
  1388  0000CC  6E22               	movwf	_adc_val1+1,c	;volatile
  1389                           
  1390                           ;main.c: 81: if (adc_val1 < 475 || adc_val1 > 545) {
  1391  0000CE  BE22               	btfsc	_adc_val1+1,7,c	;volatile
  1392  0000D0  D00E               	goto	i2l115
  1393  0000D2  0EDB               	movlw	219
  1394  0000D4  5C21               	subwf	_adc_val1,w,c	;volatile
  1395  0000D6  0E01               	movlw	1
  1396  0000D8  5822               	subwfb	_adc_val1+1,w,c	;volatile
  1397  0000DA  A0D8               	btfss	status,0,c
  1398  0000DC  D008               	goto	i2l115
  1399  0000DE  BE22               	btfsc	_adc_val1+1,7,c	;volatile
  1400  0000E0  D00B               	goto	i2l113
  1401  0000E2  0E22               	movlw	34
  1402  0000E4  5C21               	subwf	_adc_val1,w,c	;volatile
  1403  0000E6  0E02               	movlw	2
  1404  0000E8  5822               	subwfb	_adc_val1+1,w,c	;volatile
  1405  0000EA  A0D8               	btfss	status,0,c
  1406  0000EC  D005               	goto	i2l113
  1407  0000EE                     i2l115:
  1408                           
  1409                           ;main.c: 82: TMR2ON = 0;
  1410  0000EE  94BA               	bcf	4026,2,c	;volatile
  1411                           
  1412                           ;main.c: 84: ping1 = 1;
  1413  0000F0  0E01               	movlw	1
  1414  0000F2  6E2A               	movwf	_ping1,c	;volatile
  1415                           
  1416                           ;main.c: 85: LATAbits.LATA0 = 1;
  1417  0000F4  8089               	bsf	3977,0,c	;volatile
  1418                           
  1419                           ;main.c: 86: TMR0ON = 1;
  1420  0000F6  8ED5               	bsf	4053,7,c	;volatile
  1421  0000F8                     i2l113:
  1422                           
  1423                           ;main.c: 87: }
  1424                           ;main.c: 89: sensor1_turn = 0;
  1425  0000F8  0E00               	movlw	0
  1426  0000FA  6E26               	movwf	_sensor1_turn,c	;volatile
  1427                           
  1428                           ;main.c: 90: ADCON0bits.CHS = 0b01011;
  1429  0000FC  84C2               	bsf	4034,2,c	;volatile
  1430  0000FE  86C2               	bsf	4034,3,c	;volatile
  1431  000100  98C2               	bcf	4034,4,c	;volatile
  1432  000102  8AC2               	bsf	4034,5,c	;volatile
  1433  000104  9CC2               	bcf	4034,6,c	;volatile
  1434                           
  1435                           ;main.c: 91: ADCON0bits.GO = 1;
  1436  000106  82C2               	bsf	4034,1,c	;volatile
  1437                           
  1438                           ;main.c: 92: } else {
  1439  000108  D032               	goto	i2l120
  1440  00010A                     i2l1005:
  1441                           
  1442                           ;main.c: 93: adc_val2 = (ADRESH << 2) | (ADRESL >> 6);
  1443  00010A  CFC3 F001          	movff	4035,??_interrupt_service_routine	;volatile
  1444  00010E  0E06               	movlw	6
  1445  000110  6E02               	movwf	(??_interrupt_service_routine+1)& (0+255),c
  1446  000112                     i2u23_45:
  1447  000112  90D8               	bcf	status,0,c
  1448  000114  3201               	rrcf	??_interrupt_service_routine,f,c
  1449  000116  2E02               	decfsz	(??_interrupt_service_routine+1)& (0+255),f,c
  1450  000118  D7FC               	goto	i2u23_45
  1451  00011A  5001               	movf	??_interrupt_service_routine,w,c
  1452  00011C  CFC4 F003          	movff	4036,??_interrupt_service_routine+2	;volatile
  1453  000120  6A04               	clrf	(??_interrupt_service_routine+3)& (0+255),c
  1454  000122  90D8               	bcf	status,0,c
  1455  000124  3603               	rlcf	??_interrupt_service_routine+2,f,c
  1456  000126  3604               	rlcf	??_interrupt_service_routine+3,f,c
  1457  000128  90D8               	bcf	status,0,c
  1458  00012A  3603               	rlcf	??_interrupt_service_routine+2,f,c
  1459  00012C  3604               	rlcf	??_interrupt_service_routine+3,f,c
  1460  00012E  1003               	iorwf	??_interrupt_service_routine+2,w,c
  1461  000130  6E23               	movwf	_adc_val2,c	;volatile
  1462  000132  5004               	movf	??_interrupt_service_routine+3,w,c
  1463  000134  6E24               	movwf	_adc_val2+1,c	;volatile
  1464                           
  1465                           ;main.c: 95: if (adc_val2 < 475 || adc_val2 > 545) {
  1466  000136  BE24               	btfsc	_adc_val2+1,7,c	;volatile
  1467  000138  D00E               	goto	i2l119
  1468  00013A  0EDB               	movlw	219
  1469  00013C  5C23               	subwf	_adc_val2,w,c	;volatile
  1470  00013E  0E01               	movlw	1
  1471  000140  5824               	subwfb	_adc_val2+1,w,c	;volatile
  1472  000142  A0D8               	btfss	status,0,c
  1473  000144  D008               	goto	i2l119
  1474  000146  BE24               	btfsc	_adc_val2+1,7,c	;volatile
  1475  000148  D00B               	goto	i2l1015
  1476  00014A  0E22               	movlw	34
  1477  00014C  5C23               	subwf	_adc_val2,w,c	;volatile
  1478  00014E  0E02               	movlw	2
  1479  000150  5824               	subwfb	_adc_val2+1,w,c	;volatile
  1480  000152  A0D8               	btfss	status,0,c
  1481  000154  D005               	goto	i2l1015
  1482  000156                     i2l119:
  1483                           
  1484                           ;main.c: 96: TMR2ON = 0;
  1485  000156  94BA               	bcf	4026,2,c	;volatile
  1486                           
  1487                           ;main.c: 98: ping2 = 1;
  1488  000158  0E01               	movlw	1
  1489  00015A  6E2B               	movwf	_ping2,c	;volatile
  1490                           
  1491                           ;main.c: 99: LATAbits.LATA1 = 1;
  1492  00015C  8289               	bsf	3977,1,c	;volatile
  1493                           
  1494                           ;main.c: 100: TMR0ON = 1;
  1495  00015E  8ED5               	bsf	4053,7,c	;volatile
  1496  000160                     i2l1015:
  1497                           
  1498                           ;main.c: 102: }
  1499                           ;main.c: 104: ADCON0bits.CHS = 0b01001;
  1500  000160  84C2               	bsf	4034,2,c	;volatile
  1501  000162  96C2               	bcf	4034,3,c	;volatile
  1502  000164  98C2               	bcf	4034,4,c	;volatile
  1503  000166  8AC2               	bsf	4034,5,c	;volatile
  1504  000168  9CC2               	bcf	4034,6,c	;volatile
  1505                           
  1506                           ;main.c: 105: sensor1_turn = 1;
  1507  00016A  0E01               	movlw	1
  1508  00016C  6E26               	movwf	_sensor1_turn,c	;volatile
  1509  00016E                     i2l120:
  1510  00016E  C012  FFF5         	movff	??_interrupt_service_routine+17,tablat
  1511  000172  C011  FFF8         	movff	??_interrupt_service_routine+16,tblptru
  1512  000176  C010  FFF7         	movff	??_interrupt_service_routine+15,tblptrh
  1513  00017A  C00F  FFF6         	movff	??_interrupt_service_routine+14,tblptrl
  1514  00017E  C00E  FFF4         	movff	??_interrupt_service_routine+13,prodh
  1515  000182  C00D  FFF3         	movff	??_interrupt_service_routine+12,prodl
  1516  000186  C00C  FFDA         	movff	??_interrupt_service_routine+11,fsr2h
  1517  00018A  C00B  FFD9         	movff	??_interrupt_service_routine+10,fsr2l
  1518  00018E  C00A  FFE2         	movff	??_interrupt_service_routine+9,fsr1h
  1519  000192  C009  FFE1         	movff	??_interrupt_service_routine+8,fsr1l
  1520  000196  C008  FFEA         	movff	??_interrupt_service_routine+7,fsr0h
  1521  00019A  C007  FFE9         	movff	??_interrupt_service_routine+6,fsr0l
  1522  00019E  C006  FFFB         	movff	??_interrupt_service_routine+5,pclatu
  1523  0001A2  C005  FFFA         	movff	??_interrupt_service_routine+4,pclath
  1524  0001A6  922C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1525  0001A8  0011               	retfie		f
  1526  0001AA                     __end_of_interrupt_service_routine:
  1527                           	opt stack 0
  1528                           pclatu	equ	0xFFB
  1529                           pclath	equ	0xFFA
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           prodh	equ	0xFF4
  1535                           prodl	equ	0xFF3
  1536                           intcon	equ	0xFF2
  1537                           postinc0	equ	0xFEE
  1538                           fsr0h	equ	0xFEA
  1539                           fsr0l	equ	0xFE9
  1540                           postdec1	equ	0xFE5
  1541                           fsr1h	equ	0xFE2
  1542                           fsr1l	equ	0xFE1
  1543                           fsr2h	equ	0xFDA
  1544                           fsr2l	equ	0xFD9
  1545                           status	equ	0xFD8
  1546                           pclatu	equ	0xFFB
  1547                           pclath	equ	0xFFA
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           prodh	equ	0xFF4
  1553                           prodl	equ	0xFF3
  1554                           intcon	equ	0xFF2
  1555                           postinc0	equ	0xFEE
  1556                           fsr0h	equ	0xFEA
  1557                           fsr0l	equ	0xFE9
  1558                           postdec1	equ	0xFE5
  1559                           fsr1h	equ	0xFE2
  1560                           fsr1l	equ	0xFE1
  1561                           fsr2h	equ	0xFDA
  1562                           fsr2l	equ	0xFD9
  1563                           status	equ	0xFD8
  1564                           
  1565                           	psect	rparam
  1566  0000                     pclatu	equ	0xFFB
  1567                           pclath	equ	0xFFA
  1568                           tblptru	equ	0xFF8
  1569                           tblptrh	equ	0xFF7
  1570                           tblptrl	equ	0xFF6
  1571                           tablat	equ	0xFF5
  1572                           prodh	equ	0xFF4
  1573                           prodl	equ	0xFF3
  1574                           intcon	equ	0xFF2
  1575                           postinc0	equ	0xFEE
  1576                           fsr0h	equ	0xFEA
  1577                           fsr0l	equ	0xFE9
  1578                           postdec1	equ	0xFE5
  1579                           fsr1h	equ	0xFE2
  1580                           fsr1l	equ	0xFE1
  1581                           fsr2h	equ	0xFDA
  1582                           fsr2l	equ	0xFD9
  1583                           status	equ	0xFD8
  1584                           
  1585                           	psect	temp
  1586  00002C                     btemp:
  1587                           	opt stack 0
  1588  00002C                     	ds	1
  1589  0000                     int$flags	set	btemp
  1590                           pclatu	equ	0xFFB
  1591                           pclath	equ	0xFFA
  1592                           tblptru	equ	0xFF8
  1593                           tblptrh	equ	0xFF7
  1594                           tblptrl	equ	0xFF6
  1595                           tablat	equ	0xFF5
  1596                           prodh	equ	0xFF4
  1597                           prodl	equ	0xFF3
  1598                           intcon	equ	0xFF2
  1599                           postinc0	equ	0xFEE
  1600                           fsr0h	equ	0xFEA
  1601                           fsr0l	equ	0xFE9
  1602                           postdec1	equ	0xFE5
  1603                           fsr1h	equ	0xFE2
  1604                           fsr1l	equ	0xFE1
  1605                           fsr2h	equ	0xFDA
  1606                           fsr2l	equ	0xFD9
  1607                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    0
    Data        6
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    puts1USART@data	PTR unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), STR_1(CODE[7]), 

    send_debug@buffer	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_send_coord
    _startTMR2->_OpenTimer2
    _send_debug->_puts1USART
    _puts1USART->_Write1USART
    _send_coord->_putc_when_ready
    _putc_when_ready->_Write1USART

Critical Paths under _interrupt_service_routine in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_service_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_service_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_service_routine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_service_routine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_service_routine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_service_routine in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_service_routine in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_service_routine in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     671
                                             24 COMRAM     8     8      0
                          _initADCON
                            _initLed
                     _initOscillator
                           _initUART
                         _send_coord
                         _send_debug
                          _startTMR2
 ---------------------------------------------------------------------------------
 (1) _startTMR2                                            0     0      0      30
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _send_debug                                           2     0      2     303
                                             21 COMRAM     2     0      2
                    _putc_when_ready
                         _puts1USART
 ---------------------------------------------------------------------------------
 (2) _puts1USART                                           2     0      2     123
                                             19 COMRAM     2     0      2
                        _Write1USART
 ---------------------------------------------------------------------------------
 (1) _send_coord                                           4     0      4     246
                                             20 COMRAM     4     0      4
                    _putc_when_ready
 ---------------------------------------------------------------------------------
 (2) _putc_when_ready                                      1     1      0      30
                                             19 COMRAM     1     1      0
                        _Write1USART
 ---------------------------------------------------------------------------------
 (3) _Write1USART                                          1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOscillator                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLed                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADCON                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupt_service_routine                           18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initADCON
   _initLed
   _initOscillator
   _initUART
   _send_coord
     _putc_when_ready
       _Write1USART
   _send_debug
     _putc_when_ready
       _Write1USART
     _puts1USART
       _Write1USART
   _startTMR2
     _OpenTimer2

 _interrupt_service_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      2B       1       45.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B       6        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu May 12 16:14:18 2016

                               l206 0974                                 l207 0976  
                               l216 0912                                 l174 09D2  
                               l853 09B8                                 _PR2 000FBB  
                               _PSA 007EAB                      send_coord@x_cm 0015  
                    send_coord@y_cm 0017                          _TXSTA1bits 000FAC  
                      __CFG_LVP$OFF 000000                                l1131 0870  
                              l1115 083C                                l1135 0884  
                              STR_1 0801                                STR_2 0808  
                              _GIEH 007F97                                _BRGH 007D62  
                              _CREN 007D5C                                _T0CS 007EAD  
                              _T0SE 007EAC                                _LATA 000F89  
                              _PEIE 007F96                                _TMR2 000FBC  
                              _SPEN 007D5F                                _TXEN 007D65  
                              _SYNC 007D64                                _main 0810  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 002C                                pclat 000FFA  
                              prodh 000FF4                                prodl 000FF3  
                              start 01AA                       __CFG_MCLRE$ON 000000  
                      ___param_bank 000010                               ?_main 0001  
                             _T2CON 000FBA                               _LATC6 007C5E  
                             _LATC7 007C5F                      __CFG_DEBUG$OFF 000000  
                             i2l110 0094                               i2l120 016E  
                             i2l113 00F8                               i2l115 00EE  
                             i2l119 0156                               i2l977 0088  
                             i2l979 008A                               _TMR0H 000FD7  
                             _TMR0L 000FD6                               _SPBRG 000FAF  
                 ??_putc_when_ready 0014                               _TRISA 000F92  
                   __end_of_initLed 09F4                               _ping1 002A  
                             _ping2 002B                               tablat 000FF5  
                             status 000FD8                     __initialization 089A  
                      __end_of_main 089A                      puts1USART@data 0014  
                            ??_main 0019                       __activetblptr 000001  
                            _ADRESH 000FC4                              _ADRESL 000FC3  
                            _T08BIT 007EAE                              i2l1005 010A  
                            i2l1015 0160                          _OpenTimer2 095E  
                    __CFG_WDTEN$OFF 000000                              _TMR0IE 007F95  
                            _TMR0IF 007F92                              _TMR2IE 007CE9  
                            _TMR2IF 007CF1                              _TMR0ON 007EAF  
                            _TMR2ON 007DD2                              _TRISC6 007CA6  
                            _TRISC7 007CA7                              _TXREG1 000FAD  
                  __end_of_initUART 09AC                    OpenTimer2@config 0013  
                         ??_initLed 0013                        __pdataCOMRAM 0021  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                        __accesstop 0060             __end_of__initialization 08C4  
                   __CFG_PBADEN$OFF 000000                       ___rparam_used 000001  
       ??_interrupt_service_routine 0001                      __pcstackCOMRAM 0001  
           __size_of_initOscillator 0012                  __size_of_initADCON 003C  
                       ?_OpenTimer2 0001                       ??_Write1USART 0013  
                   _putc_when_ready 09D0           _interrupt_service_routine 0008  
                           i2u20_45 00AA                             i2u13_40 0060  
                           i2u14_48 0062                             i2u23_45 0112  
                __size_of_startTMR2 000C                           ?_initUART 0001  
                           __Hparam 0000                             __Lparam 0000  
               __end_of_Write1USART 09BE                   __end_of_initADCON 0912  
                      __psmallconst 0800                             __pcinit 089A  
                           __ramtop 0800                 __size_of_OpenTimer2 001C  
                           __ptext0 0810                             __ptext1 09DE  
                           __ptext2 095E                             __ptext3 097A  
                           __ptext4 0912                             __ptext5 093E  
                           __ptext6 09D0                             __ptext7 09AC  
                           __ptext8 0994                             __ptext9 09BE  
                           _counter 0027                             _initLed 09EA  
                         _T2CONbits 000FBA                end_of_initialization 08C4  
                        ??_initUART 0013                          _send_debug 097A  
                        _send_coord 093E             __end_of_putc_when_ready 09DE  
                           postdec1 000FE5                   __end_of_startTMR2 09EA  
                           postinc0 000FEE                          _puts1USART 0912  
                         _TRISBbits 000F93                      _initOscillator 09BE  
                  putc_when_ready@c 0014                         _Write1USART 09AC  
                     __pidataCOMRAM 09F4                 start_initialization 089A  
            __end_of_initOscillator 09D0                        ??_OpenTimer2 0013  
__size_of_interrupt_service_routine 01A2                         ?_send_debug 0016  
                       ?_send_coord 0015                    ?_putc_when_ready 0001  
                       ?_puts1USART 0014                  __end_of_OpenTimer2 097A  
                       __pbssCOMRAM 0027                     ?_initOscillator 0001  
 __end_of_interrupt_service_routine 01AA                   __size_of_initUART 0018  
                         __pintcode 0008                 __size_of_send_debug 001A  
                         _initADCON 08D6                 __size_of_send_coord 0020  
                       __smallconst 0800                            ?_initLed 0001  
                   Write1USART@data 0013                            _LATAbits 000F89  
                          _PIE1bits 000F9D                 __size_of_puts1USART 002C  
                          _PIR1bits 000F9E                           _startTMR2 09DE  
                        _ADCON0bits 000FC2                          _ADCON1bits 000FC1  
                        _ADCON2bits 000FC0                          ?_initADCON 0001  
                         copy_data0 08B8                        ?_Write1USART 0001  
                          __Hrparam 0000                            __Lrparam 0000  
                      __Lsmallconst 0800                          ?_startTMR2 0001  
                          _adc_val1 0021                            _adc_val2 0023  
                        _ANSELBbits 000F5C                    __size_of_initLed 000A  
                          __ptext10 09EA                            __ptext11 08D6  
                          _initUART 0994                        ??_send_debug 0018  
                      ??_send_coord 0019                            _read_adc 0025  
                     __size_of_main 008A                            int$flags 002C  
                  send_debug@buffer 0016                            main@val1 0019  
                          main@val2 001B                            main@val3 001D  
                          main@val4 001F                    ??_initOscillator 0013  
                      ??_puts1USART 0016                       _USART1_Status 0029  
                       ??_initADCON 0013                        _sensor1_turn 0026  
                __end_of_send_debug 0994                  __end_of_send_coord 095E  
                          intlevel2 0000                  __end_of_puts1USART 093E  
                        _OSCCONbits 000FD3            __size_of_putc_when_ready 000E  
                       ??_startTMR2 0014                  __CFG_FOSC$INTOSCIO 000000  
        ?_interrupt_service_routine 0001                __size_of_Write1USART 0012  
